name: Tests

on:
  workflow_call:
    inputs:
      runtime:
        required: true
        type: string

      registry:
        description: "When in QA mode, the Docker registry to use"
        type: string
        required: false

      image:
        description: "When in QA mode, the Docker image to use"
        type: string
        required: false

      tag:
        description: "When in QA mode, the Docker image tag to use"
        type: string
        required: false

jobs:
  load_configuration:
    uses: ./.github/workflows/load-configuration.yml
    with:
      runtime: ${{ inputs.runtime }}
      registry: ${{ inputs.registry }}
      image: ${{ inputs.image }}
      tag: ${{ inputs.tag }}

  test:
    needs: load_configuration
    timeout-minutes: 10
    name: "${{ matrix.group.name }}"
    strategy:
      fail-fast: false
      matrix:
        group:
          - name: samples
            path: ./src/samples

          - name: connection
            path: ./src/connection

          - name: extra
            path: ./src/extra

          - name: persistentSubscription
            path: ./src/persistentSubscription

          - name: projections
            path: ./src/projections

          - name: streams
            path: ./src/streams

          - name: opentelemetry
            path: ./src/opentelemetry

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Login to Cloudsmith
        uses: docker/login-action@v3
        with:
          registry: ${{ needs.load_configuration.outputs.registry }}
          username: ${{ secrets.CLOUDSMITH_CICD_USER }}
          password: ${{ secrets.CLOUDSMITH_CICD_TOKEN }}

      - uses: actions/setup-node@v4
        with:
          node-version-file: .github/files/.nvmrc

      - name: NodeJS version
        run: node -v

      - name: Corepack
        run: corepack enable

      - name: Install
        run: yarn

      - name: Build
        run: yarn build

      - name: Run Tests
        run: yarn test ${{ matrix.group.path }} --ci --run-in-band --forceExit
        env:
          KURRENT_IMAGE: "${{ needs.load_configuration.outputs.registry }}/${{ needs.load_configuration.outputs.image }}:${{ needs.load_configuration.outputs.tag }}"
