// source: registry/groups.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_field_mask_pb = require('google-protobuf/google/protobuf/field_mask_pb.js');
goog.object.extend(proto, google_protobuf_field_mask_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
var registry_shared_pb = require('../registry/shared_pb.js');
goog.object.extend(proto, registry_shared_pb);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.AutoRegistrationSettings', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.CompatibilitySettings', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupRequest', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupResponse', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.DataFormatSettings', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.DeleteSchemaGroupRequest', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.DeleteSchemaGroupResponse', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.GetSchemaGroupRequest', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.GetSchemaGroupResponse', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsRequest', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsResponse', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.SchemaGroup', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.StreamFilter', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.StreamFilterSettings', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.StreamFilterType', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupRequest', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupResponse', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.ValidationSettings', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.AutoRegistrationSettings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.AutoRegistrationSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.AutoRegistrationSettings.displayName = 'proto.kurrentdb.protocol.registry.v2.AutoRegistrationSettings';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.ValidationSettings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.ValidationSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.ValidationSettings.displayName = 'proto.kurrentdb.protocol.registry.v2.ValidationSettings';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.CompatibilitySettings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.CompatibilitySettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.CompatibilitySettings.displayName = 'proto.kurrentdb.protocol.registry.v2.CompatibilitySettings';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.DataFormatSettings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.DataFormatSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.DataFormatSettings.displayName = 'proto.kurrentdb.protocol.registry.v2.DataFormatSettings';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.StreamFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.StreamFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.StreamFilter.displayName = 'proto.kurrentdb.protocol.registry.v2.StreamFilter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.StreamFilterSettings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.StreamFilterSettings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.StreamFilterSettings.displayName = 'proto.kurrentdb.protocol.registry.v2.StreamFilterSettings';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails.displayName = 'proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.SchemaGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.SchemaGroup.displayName = 'proto.kurrentdb.protocol.registry.v2.SchemaGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupRequest.displayName = 'proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupResponse.displayName = 'proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupRequest.displayName = 'proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupResponse.displayName = 'proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaGroupRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.DeleteSchemaGroupRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.DeleteSchemaGroupRequest.displayName = 'proto.kurrentdb.protocol.registry.v2.DeleteSchemaGroupRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaGroupResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.DeleteSchemaGroupResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.DeleteSchemaGroupResponse.displayName = 'proto.kurrentdb.protocol.registry.v2.DeleteSchemaGroupResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaGroupRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.GetSchemaGroupRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.GetSchemaGroupRequest.displayName = 'proto.kurrentdb.protocol.registry.v2.GetSchemaGroupRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaGroupResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.GetSchemaGroupResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.GetSchemaGroupResponse.displayName = 'proto.kurrentdb.protocol.registry.v2.GetSchemaGroupResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsRequest.displayName = 'proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsResponse.repeatedFields_, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsResponse.displayName = 'proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.AutoRegistrationSettings.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.AutoRegistrationSettings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.AutoRegistrationSettings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.AutoRegistrationSettings.toObject = function(includeInstance, msg) {
  var f, obj = {
    enabled: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.AutoRegistrationSettings}
 */
proto.kurrentdb.protocol.registry.v2.AutoRegistrationSettings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.AutoRegistrationSettings;
  return proto.kurrentdb.protocol.registry.v2.AutoRegistrationSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.AutoRegistrationSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.AutoRegistrationSettings}
 */
proto.kurrentdb.protocol.registry.v2.AutoRegistrationSettings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnabled(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.AutoRegistrationSettings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.AutoRegistrationSettings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.AutoRegistrationSettings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.AutoRegistrationSettings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnabled();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool enabled = 1;
 * @return {boolean}
 */
proto.kurrentdb.protocol.registry.v2.AutoRegistrationSettings.prototype.getEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.kurrentdb.protocol.registry.v2.AutoRegistrationSettings} returns this
 */
proto.kurrentdb.protocol.registry.v2.AutoRegistrationSettings.prototype.setEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.ValidationSettings.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.ValidationSettings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.ValidationSettings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.ValidationSettings.toObject = function(includeInstance, msg) {
  var f, obj = {
    enabled: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.ValidationSettings}
 */
proto.kurrentdb.protocol.registry.v2.ValidationSettings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.ValidationSettings;
  return proto.kurrentdb.protocol.registry.v2.ValidationSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.ValidationSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.ValidationSettings}
 */
proto.kurrentdb.protocol.registry.v2.ValidationSettings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnabled(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.ValidationSettings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.ValidationSettings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.ValidationSettings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.ValidationSettings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnabled();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool enabled = 1;
 * @return {boolean}
 */
proto.kurrentdb.protocol.registry.v2.ValidationSettings.prototype.getEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.kurrentdb.protocol.registry.v2.ValidationSettings} returns this
 */
proto.kurrentdb.protocol.registry.v2.ValidationSettings.prototype.setEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.CompatibilitySettings.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.CompatibilitySettings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.CompatibilitySettings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.CompatibilitySettings.toObject = function(includeInstance, msg) {
  var f, obj = {
    enforce: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    mode: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.CompatibilitySettings}
 */
proto.kurrentdb.protocol.registry.v2.CompatibilitySettings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.CompatibilitySettings;
  return proto.kurrentdb.protocol.registry.v2.CompatibilitySettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.CompatibilitySettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.CompatibilitySettings}
 */
proto.kurrentdb.protocol.registry.v2.CompatibilitySettings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnforce(value);
      break;
    case 2:
      var value = /** @type {!proto.kurrentdb.protocol.registry.v2.CompatibilityMode} */ (reader.readEnum());
      msg.setMode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.CompatibilitySettings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.CompatibilitySettings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.CompatibilitySettings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.CompatibilitySettings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnforce();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMode();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional bool enforce = 1;
 * @return {boolean}
 */
proto.kurrentdb.protocol.registry.v2.CompatibilitySettings.prototype.getEnforce = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.kurrentdb.protocol.registry.v2.CompatibilitySettings} returns this
 */
proto.kurrentdb.protocol.registry.v2.CompatibilitySettings.prototype.setEnforce = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional CompatibilityMode mode = 2;
 * @return {!proto.kurrentdb.protocol.registry.v2.CompatibilityMode}
 */
proto.kurrentdb.protocol.registry.v2.CompatibilitySettings.prototype.getMode = function() {
  return /** @type {!proto.kurrentdb.protocol.registry.v2.CompatibilityMode} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.kurrentdb.protocol.registry.v2.CompatibilityMode} value
 * @return {!proto.kurrentdb.protocol.registry.v2.CompatibilitySettings} returns this
 */
proto.kurrentdb.protocol.registry.v2.CompatibilitySettings.prototype.setMode = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.DataFormatSettings.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.DataFormatSettings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.DataFormatSettings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.DataFormatSettings.toObject = function(includeInstance, msg) {
  var f, obj = {
    enforce: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    format: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.DataFormatSettings}
 */
proto.kurrentdb.protocol.registry.v2.DataFormatSettings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.DataFormatSettings;
  return proto.kurrentdb.protocol.registry.v2.DataFormatSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.DataFormatSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.DataFormatSettings}
 */
proto.kurrentdb.protocol.registry.v2.DataFormatSettings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnforce(value);
      break;
    case 2:
      var value = /** @type {!proto.kurrentdb.protocol.registry.v2.SchemaDataFormat} */ (reader.readEnum());
      msg.setFormat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.DataFormatSettings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.DataFormatSettings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.DataFormatSettings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.DataFormatSettings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnforce();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getFormat();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional bool enforce = 1;
 * @return {boolean}
 */
proto.kurrentdb.protocol.registry.v2.DataFormatSettings.prototype.getEnforce = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.kurrentdb.protocol.registry.v2.DataFormatSettings} returns this
 */
proto.kurrentdb.protocol.registry.v2.DataFormatSettings.prototype.setEnforce = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional SchemaDataFormat format = 2;
 * @return {!proto.kurrentdb.protocol.registry.v2.SchemaDataFormat}
 */
proto.kurrentdb.protocol.registry.v2.DataFormatSettings.prototype.getFormat = function() {
  return /** @type {!proto.kurrentdb.protocol.registry.v2.SchemaDataFormat} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.kurrentdb.protocol.registry.v2.SchemaDataFormat} value
 * @return {!proto.kurrentdb.protocol.registry.v2.DataFormatSettings} returns this
 */
proto.kurrentdb.protocol.registry.v2.DataFormatSettings.prototype.setFormat = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.StreamFilter.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.StreamFilter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.StreamFilter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.StreamFilter.toObject = function(includeInstance, msg) {
  var f, obj = {
    filterType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    expression: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.StreamFilter}
 */
proto.kurrentdb.protocol.registry.v2.StreamFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.StreamFilter;
  return proto.kurrentdb.protocol.registry.v2.StreamFilter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.StreamFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.StreamFilter}
 */
proto.kurrentdb.protocol.registry.v2.StreamFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.kurrentdb.protocol.registry.v2.StreamFilterType} */ (reader.readEnum());
      msg.setFilterType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpression(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.StreamFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.StreamFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.StreamFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.StreamFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilterType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getExpression();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional StreamFilterType filter_type = 1;
 * @return {!proto.kurrentdb.protocol.registry.v2.StreamFilterType}
 */
proto.kurrentdb.protocol.registry.v2.StreamFilter.prototype.getFilterType = function() {
  return /** @type {!proto.kurrentdb.protocol.registry.v2.StreamFilterType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.kurrentdb.protocol.registry.v2.StreamFilterType} value
 * @return {!proto.kurrentdb.protocol.registry.v2.StreamFilter} returns this
 */
proto.kurrentdb.protocol.registry.v2.StreamFilter.prototype.setFilterType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string expression = 2;
 * @return {string}
 */
proto.kurrentdb.protocol.registry.v2.StreamFilter.prototype.getExpression = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.registry.v2.StreamFilter} returns this
 */
proto.kurrentdb.protocol.registry.v2.StreamFilter.prototype.setExpression = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.StreamFilterSettings.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.StreamFilterSettings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.StreamFilterSettings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.StreamFilterSettings.toObject = function(includeInstance, msg) {
  var f, obj = {
    enforce: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    filter: (f = msg.getFilter()) && proto.kurrentdb.protocol.registry.v2.StreamFilter.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.StreamFilterSettings}
 */
proto.kurrentdb.protocol.registry.v2.StreamFilterSettings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.StreamFilterSettings;
  return proto.kurrentdb.protocol.registry.v2.StreamFilterSettings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.StreamFilterSettings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.StreamFilterSettings}
 */
proto.kurrentdb.protocol.registry.v2.StreamFilterSettings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnforce(value);
      break;
    case 2:
      var value = new proto.kurrentdb.protocol.registry.v2.StreamFilter;
      reader.readMessage(value,proto.kurrentdb.protocol.registry.v2.StreamFilter.deserializeBinaryFromReader);
      msg.setFilter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.StreamFilterSettings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.StreamFilterSettings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.StreamFilterSettings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.StreamFilterSettings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnforce();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getFilter();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.kurrentdb.protocol.registry.v2.StreamFilter.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool enforce = 1;
 * @return {boolean}
 */
proto.kurrentdb.protocol.registry.v2.StreamFilterSettings.prototype.getEnforce = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.kurrentdb.protocol.registry.v2.StreamFilterSettings} returns this
 */
proto.kurrentdb.protocol.registry.v2.StreamFilterSettings.prototype.setEnforce = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional StreamFilter filter = 2;
 * @return {?proto.kurrentdb.protocol.registry.v2.StreamFilter}
 */
proto.kurrentdb.protocol.registry.v2.StreamFilterSettings.prototype.getFilter = function() {
  return /** @type{?proto.kurrentdb.protocol.registry.v2.StreamFilter} */ (
    jspb.Message.getWrapperField(this, proto.kurrentdb.protocol.registry.v2.StreamFilter, 2));
};


/**
 * @param {?proto.kurrentdb.protocol.registry.v2.StreamFilter|undefined} value
 * @return {!proto.kurrentdb.protocol.registry.v2.StreamFilterSettings} returns this
*/
proto.kurrentdb.protocol.registry.v2.StreamFilterSettings.prototype.setFilter = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kurrentdb.protocol.registry.v2.StreamFilterSettings} returns this
 */
proto.kurrentdb.protocol.registry.v2.StreamFilterSettings.prototype.clearFilter = function() {
  return this.setFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kurrentdb.protocol.registry.v2.StreamFilterSettings.prototype.hasFilter = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    tagsMap: (f = msg.getTagsMap()) ? f.toObject(includeInstance, undefined) : [],
    autoRegistration: (f = msg.getAutoRegistration()) && proto.kurrentdb.protocol.registry.v2.AutoRegistrationSettings.toObject(includeInstance, f),
    validation: (f = msg.getValidation()) && proto.kurrentdb.protocol.registry.v2.ValidationSettings.toObject(includeInstance, f),
    compatibility: (f = msg.getCompatibility()) && proto.kurrentdb.protocol.registry.v2.CompatibilitySettings.toObject(includeInstance, f),
    dataFormat: (f = msg.getDataFormat()) && proto.kurrentdb.protocol.registry.v2.DataFormatSettings.toObject(includeInstance, f),
    streamFilter: (f = msg.getStreamFilter()) && proto.kurrentdb.protocol.registry.v2.StreamFilterSettings.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails}
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails;
  return proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails}
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = msg.getTagsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 11:
      var value = new proto.kurrentdb.protocol.registry.v2.AutoRegistrationSettings;
      reader.readMessage(value,proto.kurrentdb.protocol.registry.v2.AutoRegistrationSettings.deserializeBinaryFromReader);
      msg.setAutoRegistration(value);
      break;
    case 12:
      var value = new proto.kurrentdb.protocol.registry.v2.ValidationSettings;
      reader.readMessage(value,proto.kurrentdb.protocol.registry.v2.ValidationSettings.deserializeBinaryFromReader);
      msg.setValidation(value);
      break;
    case 13:
      var value = new proto.kurrentdb.protocol.registry.v2.CompatibilitySettings;
      reader.readMessage(value,proto.kurrentdb.protocol.registry.v2.CompatibilitySettings.deserializeBinaryFromReader);
      msg.setCompatibility(value);
      break;
    case 14:
      var value = new proto.kurrentdb.protocol.registry.v2.DataFormatSettings;
      reader.readMessage(value,proto.kurrentdb.protocol.registry.v2.DataFormatSettings.deserializeBinaryFromReader);
      msg.setDataFormat(value);
      break;
    case 15:
      var value = new proto.kurrentdb.protocol.registry.v2.StreamFilterSettings;
      reader.readMessage(value,proto.kurrentdb.protocol.registry.v2.StreamFilterSettings.deserializeBinaryFromReader);
      msg.setStreamFilter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTagsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getAutoRegistration();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.kurrentdb.protocol.registry.v2.AutoRegistrationSettings.serializeBinaryToWriter
    );
  }
  f = message.getValidation();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.kurrentdb.protocol.registry.v2.ValidationSettings.serializeBinaryToWriter
    );
  }
  f = message.getCompatibility();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.kurrentdb.protocol.registry.v2.CompatibilitySettings.serializeBinaryToWriter
    );
  }
  f = message.getDataFormat();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.kurrentdb.protocol.registry.v2.DataFormatSettings.serializeBinaryToWriter
    );
  }
  f = message.getStreamFilter();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.kurrentdb.protocol.registry.v2.StreamFilterSettings.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails} returns this
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails} returns this
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails} returns this
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * map<string, string> tags = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails.prototype.getTagsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails} returns this
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails.prototype.clearTagsMap = function() {
  this.getTagsMap().clear();
  return this;};


/**
 * optional AutoRegistrationSettings auto_registration = 11;
 * @return {?proto.kurrentdb.protocol.registry.v2.AutoRegistrationSettings}
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails.prototype.getAutoRegistration = function() {
  return /** @type{?proto.kurrentdb.protocol.registry.v2.AutoRegistrationSettings} */ (
    jspb.Message.getWrapperField(this, proto.kurrentdb.protocol.registry.v2.AutoRegistrationSettings, 11));
};


/**
 * @param {?proto.kurrentdb.protocol.registry.v2.AutoRegistrationSettings|undefined} value
 * @return {!proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails} returns this
*/
proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails.prototype.setAutoRegistration = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails} returns this
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails.prototype.clearAutoRegistration = function() {
  return this.setAutoRegistration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails.prototype.hasAutoRegistration = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional ValidationSettings validation = 12;
 * @return {?proto.kurrentdb.protocol.registry.v2.ValidationSettings}
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails.prototype.getValidation = function() {
  return /** @type{?proto.kurrentdb.protocol.registry.v2.ValidationSettings} */ (
    jspb.Message.getWrapperField(this, proto.kurrentdb.protocol.registry.v2.ValidationSettings, 12));
};


/**
 * @param {?proto.kurrentdb.protocol.registry.v2.ValidationSettings|undefined} value
 * @return {!proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails} returns this
*/
proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails.prototype.setValidation = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails} returns this
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails.prototype.clearValidation = function() {
  return this.setValidation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails.prototype.hasValidation = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional CompatibilitySettings compatibility = 13;
 * @return {?proto.kurrentdb.protocol.registry.v2.CompatibilitySettings}
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails.prototype.getCompatibility = function() {
  return /** @type{?proto.kurrentdb.protocol.registry.v2.CompatibilitySettings} */ (
    jspb.Message.getWrapperField(this, proto.kurrentdb.protocol.registry.v2.CompatibilitySettings, 13));
};


/**
 * @param {?proto.kurrentdb.protocol.registry.v2.CompatibilitySettings|undefined} value
 * @return {!proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails} returns this
*/
proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails.prototype.setCompatibility = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails} returns this
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails.prototype.clearCompatibility = function() {
  return this.setCompatibility(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails.prototype.hasCompatibility = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional DataFormatSettings data_format = 14;
 * @return {?proto.kurrentdb.protocol.registry.v2.DataFormatSettings}
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails.prototype.getDataFormat = function() {
  return /** @type{?proto.kurrentdb.protocol.registry.v2.DataFormatSettings} */ (
    jspb.Message.getWrapperField(this, proto.kurrentdb.protocol.registry.v2.DataFormatSettings, 14));
};


/**
 * @param {?proto.kurrentdb.protocol.registry.v2.DataFormatSettings|undefined} value
 * @return {!proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails} returns this
*/
proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails.prototype.setDataFormat = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails} returns this
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails.prototype.clearDataFormat = function() {
  return this.setDataFormat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails.prototype.hasDataFormat = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional StreamFilterSettings stream_filter = 15;
 * @return {?proto.kurrentdb.protocol.registry.v2.StreamFilterSettings}
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails.prototype.getStreamFilter = function() {
  return /** @type{?proto.kurrentdb.protocol.registry.v2.StreamFilterSettings} */ (
    jspb.Message.getWrapperField(this, proto.kurrentdb.protocol.registry.v2.StreamFilterSettings, 15));
};


/**
 * @param {?proto.kurrentdb.protocol.registry.v2.StreamFilterSettings|undefined} value
 * @return {!proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails} returns this
*/
proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails.prototype.setStreamFilter = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails} returns this
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails.prototype.clearStreamFilter = function() {
  return this.setStreamFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails.prototype.hasStreamFilter = function() {
  return jspb.Message.getField(this, 15) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.SchemaGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.SchemaGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    details: (f = msg.getDetails()) && proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails.toObject(includeInstance, f),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedAt: (f = msg.getUpdatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.SchemaGroup}
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.SchemaGroup;
  return proto.kurrentdb.protocol.registry.v2.SchemaGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.SchemaGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.SchemaGroup}
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupId(value);
      break;
    case 2:
      var value = new proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails;
      reader.readMessage(value,proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails.deserializeBinaryFromReader);
      msg.setDetails(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.SchemaGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.SchemaGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDetails();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails.serializeBinaryToWriter
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string group_id = 1;
 * @return {string}
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroup.prototype.getGroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.registry.v2.SchemaGroup} returns this
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroup.prototype.setGroupId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional SchemaGroupDetails details = 2;
 * @return {?proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails}
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroup.prototype.getDetails = function() {
  return /** @type{?proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails} */ (
    jspb.Message.getWrapperField(this, proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails, 2));
};


/**
 * @param {?proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails|undefined} value
 * @return {!proto.kurrentdb.protocol.registry.v2.SchemaGroup} returns this
*/
proto.kurrentdb.protocol.registry.v2.SchemaGroup.prototype.setDetails = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kurrentdb.protocol.registry.v2.SchemaGroup} returns this
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroup.prototype.clearDetails = function() {
  return this.setDetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroup.prototype.hasDetails = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp created_at = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroup.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.kurrentdb.protocol.registry.v2.SchemaGroup} returns this
*/
proto.kurrentdb.protocol.registry.v2.SchemaGroup.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kurrentdb.protocol.registry.v2.SchemaGroup} returns this
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroup.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroup.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Timestamp updated_at = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroup.prototype.getUpdatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.kurrentdb.protocol.registry.v2.SchemaGroup} returns this
*/
proto.kurrentdb.protocol.registry.v2.SchemaGroup.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kurrentdb.protocol.registry.v2.SchemaGroup} returns this
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroup.prototype.clearUpdatedAt = function() {
  return this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kurrentdb.protocol.registry.v2.SchemaGroup.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    details: (f = msg.getDetails()) && proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupRequest}
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupRequest;
  return proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupRequest}
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupId(value);
      break;
    case 2:
      var value = new proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails;
      reader.readMessage(value,proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails.deserializeBinaryFromReader);
      msg.setDetails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDetails();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails.serializeBinaryToWriter
    );
  }
};


/**
 * optional string group_id = 1;
 * @return {string}
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupRequest.prototype.getGroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupRequest} returns this
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupRequest.prototype.setGroupId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupRequest} returns this
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupRequest.prototype.clearGroupId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupRequest.prototype.hasGroupId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional SchemaGroupDetails details = 2;
 * @return {?proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails}
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupRequest.prototype.getDetails = function() {
  return /** @type{?proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails} */ (
    jspb.Message.getWrapperField(this, proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails, 2));
};


/**
 * @param {?proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails|undefined} value
 * @return {!proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupRequest} returns this
*/
proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupRequest.prototype.setDetails = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupRequest} returns this
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupRequest.prototype.clearDetails = function() {
  return this.setDetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupRequest.prototype.hasDetails = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupResponse}
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupResponse;
  return proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupResponse}
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string group_id = 1;
 * @return {string}
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupResponse.prototype.getGroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupResponse} returns this
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaGroupResponse.prototype.setGroupId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    details: (f = msg.getDetails()) && proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails.toObject(includeInstance, f),
    updateMask: (f = msg.getUpdateMask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupRequest}
 */
proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupRequest;
  return proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupRequest}
 */
proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupId(value);
      break;
    case 2:
      var value = new proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails;
      reader.readMessage(value,proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails.deserializeBinaryFromReader);
      msg.setDetails(value);
      break;
    case 3:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setUpdateMask(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDetails();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails.serializeBinaryToWriter
    );
  }
  f = message.getUpdateMask();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
};


/**
 * optional string group_id = 1;
 * @return {string}
 */
proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupRequest.prototype.getGroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupRequest} returns this
 */
proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupRequest.prototype.setGroupId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional SchemaGroupDetails details = 2;
 * @return {?proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails}
 */
proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupRequest.prototype.getDetails = function() {
  return /** @type{?proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails} */ (
    jspb.Message.getWrapperField(this, proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails, 2));
};


/**
 * @param {?proto.kurrentdb.protocol.registry.v2.SchemaGroupDetails|undefined} value
 * @return {!proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupRequest} returns this
*/
proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupRequest.prototype.setDetails = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupRequest} returns this
 */
proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupRequest.prototype.clearDetails = function() {
  return this.setDetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupRequest.prototype.hasDetails = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.FieldMask update_mask = 3;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupRequest.prototype.getUpdateMask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 3));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupRequest} returns this
*/
proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupRequest.prototype.setUpdateMask = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupRequest} returns this
 */
proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupRequest.prototype.clearUpdateMask = function() {
  return this.setUpdateMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupRequest.prototype.hasUpdateMask = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupResponse}
 */
proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupResponse;
  return proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupResponse}
 */
proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.UpdateSchemaGroupResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaGroupRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.DeleteSchemaGroupRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaGroupRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaGroupRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaGroupRequest}
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaGroupRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.DeleteSchemaGroupRequest;
  return proto.kurrentdb.protocol.registry.v2.DeleteSchemaGroupRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaGroupRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaGroupRequest}
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaGroupRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaGroupRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.DeleteSchemaGroupRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaGroupRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaGroupRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string group_id = 1;
 * @return {string}
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaGroupRequest.prototype.getGroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaGroupRequest} returns this
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaGroupRequest.prototype.setGroupId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaGroupResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.DeleteSchemaGroupResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaGroupResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaGroupResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaGroupResponse}
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaGroupResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.DeleteSchemaGroupResponse;
  return proto.kurrentdb.protocol.registry.v2.DeleteSchemaGroupResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaGroupResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaGroupResponse}
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaGroupResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaGroupResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.DeleteSchemaGroupResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaGroupResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaGroupResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaGroupRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.GetSchemaGroupRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.GetSchemaGroupRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaGroupRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.GetSchemaGroupRequest}
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaGroupRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.GetSchemaGroupRequest;
  return proto.kurrentdb.protocol.registry.v2.GetSchemaGroupRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.GetSchemaGroupRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.GetSchemaGroupRequest}
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaGroupRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaGroupRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.GetSchemaGroupRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.GetSchemaGroupRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaGroupRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string group_id = 1;
 * @return {string}
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaGroupRequest.prototype.getGroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.registry.v2.GetSchemaGroupRequest} returns this
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaGroupRequest.prototype.setGroupId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaGroupResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.GetSchemaGroupResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.GetSchemaGroupResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaGroupResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    group: (f = msg.getGroup()) && proto.kurrentdb.protocol.registry.v2.SchemaGroup.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.GetSchemaGroupResponse}
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaGroupResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.GetSchemaGroupResponse;
  return proto.kurrentdb.protocol.registry.v2.GetSchemaGroupResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.GetSchemaGroupResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.GetSchemaGroupResponse}
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaGroupResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.kurrentdb.protocol.registry.v2.SchemaGroup;
      reader.readMessage(value,proto.kurrentdb.protocol.registry.v2.SchemaGroup.deserializeBinaryFromReader);
      msg.setGroup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaGroupResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.GetSchemaGroupResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.GetSchemaGroupResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaGroupResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroup();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.kurrentdb.protocol.registry.v2.SchemaGroup.serializeBinaryToWriter
    );
  }
};


/**
 * optional SchemaGroup group = 1;
 * @return {?proto.kurrentdb.protocol.registry.v2.SchemaGroup}
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaGroupResponse.prototype.getGroup = function() {
  return /** @type{?proto.kurrentdb.protocol.registry.v2.SchemaGroup} */ (
    jspb.Message.getWrapperField(this, proto.kurrentdb.protocol.registry.v2.SchemaGroup, 1));
};


/**
 * @param {?proto.kurrentdb.protocol.registry.v2.SchemaGroup|undefined} value
 * @return {!proto.kurrentdb.protocol.registry.v2.GetSchemaGroupResponse} returns this
*/
proto.kurrentdb.protocol.registry.v2.GetSchemaGroupResponse.prototype.setGroup = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kurrentdb.protocol.registry.v2.GetSchemaGroupResponse} returns this
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaGroupResponse.prototype.clearGroup = function() {
  return this.setGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaGroupResponse.prototype.hasGroup = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupNamePrefix: (f = msg.getGroupNamePrefix()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsRequest}
 */
proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsRequest;
  return proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsRequest}
 */
proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setGroupNamePrefix(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupNamePrefix();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.StringValue group_name_prefix = 1;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsRequest.prototype.getGroupNamePrefix = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 1));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsRequest} returns this
*/
proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsRequest.prototype.setGroupNamePrefix = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsRequest} returns this
 */
proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsRequest.prototype.clearGroupNamePrefix = function() {
  return this.setGroupNamePrefix(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsRequest.prototype.hasGroupNamePrefix = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupsList: jspb.Message.toObjectList(msg.getGroupsList(),
    proto.kurrentdb.protocol.registry.v2.SchemaGroup.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsResponse}
 */
proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsResponse;
  return proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsResponse}
 */
proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.kurrentdb.protocol.registry.v2.SchemaGroup;
      reader.readMessage(value,proto.kurrentdb.protocol.registry.v2.SchemaGroup.deserializeBinaryFromReader);
      msg.addGroups(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.kurrentdb.protocol.registry.v2.SchemaGroup.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SchemaGroup groups = 1;
 * @return {!Array<!proto.kurrentdb.protocol.registry.v2.SchemaGroup>}
 */
proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsResponse.prototype.getGroupsList = function() {
  return /** @type{!Array<!proto.kurrentdb.protocol.registry.v2.SchemaGroup>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.kurrentdb.protocol.registry.v2.SchemaGroup, 1));
};


/**
 * @param {!Array<!proto.kurrentdb.protocol.registry.v2.SchemaGroup>} value
 * @return {!proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsResponse} returns this
*/
proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsResponse.prototype.setGroupsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.kurrentdb.protocol.registry.v2.SchemaGroup=} opt_value
 * @param {number=} opt_index
 * @return {!proto.kurrentdb.protocol.registry.v2.SchemaGroup}
 */
proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsResponse.prototype.addGroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.kurrentdb.protocol.registry.v2.SchemaGroup, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsResponse} returns this
 */
proto.kurrentdb.protocol.registry.v2.ListSchemaGroupsResponse.prototype.clearGroupsList = function() {
  return this.setGroupsList([]);
};


/**
 * @enum {number}
 */
proto.kurrentdb.protocol.registry.v2.StreamFilterType = {
  CONSUME_FILTER_TYPE_UNSPECIFIED: 0,
  CONSUME_FILTER_TYPE_REGEX: 1,
  CONSUME_FILTER_TYPE_CATEGORY: 2
};

goog.object.extend(exports, proto.kurrentdb.protocol.registry.v2);
