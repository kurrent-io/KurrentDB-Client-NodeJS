// source: registry/schemas.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_field_mask_pb = require('google-protobuf/google/protobuf/field_mask_pb.js');
goog.object.extend(proto, google_protobuf_field_mask_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
var registry_shared_pb = require('../registry/shared_pb.js');
goog.object.extend(proto, registry_shared_pb);
var core_pb = require('../core_pb.js');
goog.object.extend(proto, core_pb);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasRequest', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasResponse', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.CreateSchemaResponse', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.DeleteSchemaRequest', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.DeleteSchemaResponse', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsRequest', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.SchemaVersionError', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.GetSchemaRequest', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.GetSchemaResponse', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdRequest', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdResponse', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.GetSchemaVersionRequest', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.GetSchemaVersionResponse', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasRequest', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasResponse', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsRequest', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsResponse', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.ListSchemasRequest', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.ListSchemasResponse', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.LookupSchemaNameRequest', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.LookupSchemaNameResponse', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionRequest', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionResponse', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.RegisteredSchema', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.Schema', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.SchemaDetails', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.SchemaVersion', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.UpdateSchemaRequest', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.registry.v2.UpdateSchemaResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.SchemaDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.SchemaDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.SchemaDetails.displayName = 'proto.kurrentdb.protocol.registry.v2.SchemaDetails';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest.displayName = 'proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.CreateSchemaResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.CreateSchemaResponse.displayName = 'proto.kurrentdb.protocol.registry.v2.CreateSchemaResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.UpdateSchemaRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.UpdateSchemaRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.UpdateSchemaRequest.displayName = 'proto.kurrentdb.protocol.registry.v2.UpdateSchemaRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.UpdateSchemaResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.UpdateSchemaResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.UpdateSchemaResponse.displayName = 'proto.kurrentdb.protocol.registry.v2.UpdateSchemaResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.DeleteSchemaRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.DeleteSchemaRequest.displayName = 'proto.kurrentdb.protocol.registry.v2.DeleteSchemaRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.DeleteSchemaResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.DeleteSchemaResponse.displayName = 'proto.kurrentdb.protocol.registry.v2.DeleteSchemaResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.Schema = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.Schema, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.Schema.displayName = 'proto.kurrentdb.protocol.registry.v2.Schema';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.GetSchemaRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.GetSchemaRequest.displayName = 'proto.kurrentdb.protocol.registry.v2.GetSchemaRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.GetSchemaResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.GetSchemaResponse.displayName = 'proto.kurrentdb.protocol.registry.v2.GetSchemaResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.ListSchemasRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.ListSchemasRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.ListSchemasRequest.displayName = 'proto.kurrentdb.protocol.registry.v2.ListSchemasRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.ListSchemasResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.kurrentdb.protocol.registry.v2.ListSchemasResponse.repeatedFields_, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.ListSchemasResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.ListSchemasResponse.displayName = 'proto.kurrentdb.protocol.registry.v2.ListSchemasResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.LookupSchemaNameRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.LookupSchemaNameRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.LookupSchemaNameRequest.displayName = 'proto.kurrentdb.protocol.registry.v2.LookupSchemaNameRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.LookupSchemaNameResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.LookupSchemaNameResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.LookupSchemaNameResponse.displayName = 'proto.kurrentdb.protocol.registry.v2.LookupSchemaNameResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionRequest.displayName = 'proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionResponse.displayName = 'proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsRequest.repeatedFields_, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsRequest.displayName = 'proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.repeatedFields_, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.displayName = 'proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.SchemaVersionError = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.SchemaVersionError, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.SchemaVersionError.displayName = 'proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.SchemaVersionError';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.SchemaVersion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.SchemaVersion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.SchemaVersion.displayName = 'proto.kurrentdb.protocol.registry.v2.SchemaVersion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdRequest.displayName = 'proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdResponse.displayName = 'proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaVersionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.GetSchemaVersionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.GetSchemaVersionRequest.displayName = 'proto.kurrentdb.protocol.registry.v2.GetSchemaVersionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaVersionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.GetSchemaVersionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.GetSchemaVersionResponse.displayName = 'proto.kurrentdb.protocol.registry.v2.GetSchemaVersionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsRequest.displayName = 'proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsResponse.repeatedFields_, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsResponse.displayName = 'proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.RegisteredSchema = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.RegisteredSchema, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.RegisteredSchema.displayName = 'proto.kurrentdb.protocol.registry.v2.RegisteredSchema';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasRequest.displayName = 'proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasResponse.repeatedFields_, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasResponse.displayName = 'proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasRequest.repeatedFields_, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasRequest.displayName = 'proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasResponse.repeatedFields_, null);
};
goog.inherits(proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasResponse.displayName = 'proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.SchemaDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.SchemaDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.SchemaDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.SchemaDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataFormat: jspb.Message.getFieldWithDefault(msg, 1, 0),
    compatibility: jspb.Message.getFieldWithDefault(msg, 2, 0),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    tagsMap: (f = msg.getTagsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.SchemaDetails}
 */
proto.kurrentdb.protocol.registry.v2.SchemaDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.SchemaDetails;
  return proto.kurrentdb.protocol.registry.v2.SchemaDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.SchemaDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.SchemaDetails}
 */
proto.kurrentdb.protocol.registry.v2.SchemaDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.kurrentdb.protocol.registry.v2.SchemaDataFormat} */ (reader.readEnum());
      msg.setDataFormat(value);
      break;
    case 2:
      var value = /** @type {!proto.kurrentdb.protocol.registry.v2.CompatibilityMode} */ (reader.readEnum());
      msg.setCompatibility(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = msg.getTagsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.SchemaDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.SchemaDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.SchemaDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.SchemaDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataFormat();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getCompatibility();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getTagsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional SchemaDataFormat data_format = 1;
 * @return {!proto.kurrentdb.protocol.registry.v2.SchemaDataFormat}
 */
proto.kurrentdb.protocol.registry.v2.SchemaDetails.prototype.getDataFormat = function() {
  return /** @type {!proto.kurrentdb.protocol.registry.v2.SchemaDataFormat} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.kurrentdb.protocol.registry.v2.SchemaDataFormat} value
 * @return {!proto.kurrentdb.protocol.registry.v2.SchemaDetails} returns this
 */
proto.kurrentdb.protocol.registry.v2.SchemaDetails.prototype.setDataFormat = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional CompatibilityMode compatibility = 2;
 * @return {!proto.kurrentdb.protocol.registry.v2.CompatibilityMode}
 */
proto.kurrentdb.protocol.registry.v2.SchemaDetails.prototype.getCompatibility = function() {
  return /** @type {!proto.kurrentdb.protocol.registry.v2.CompatibilityMode} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.kurrentdb.protocol.registry.v2.CompatibilityMode} value
 * @return {!proto.kurrentdb.protocol.registry.v2.SchemaDetails} returns this
 */
proto.kurrentdb.protocol.registry.v2.SchemaDetails.prototype.setCompatibility = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.kurrentdb.protocol.registry.v2.SchemaDetails.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.registry.v2.SchemaDetails} returns this
 */
proto.kurrentdb.protocol.registry.v2.SchemaDetails.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.kurrentdb.protocol.registry.v2.SchemaDetails} returns this
 */
proto.kurrentdb.protocol.registry.v2.SchemaDetails.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kurrentdb.protocol.registry.v2.SchemaDetails.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * map<string, string> tags = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.kurrentdb.protocol.registry.v2.SchemaDetails.prototype.getTagsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.kurrentdb.protocol.registry.v2.SchemaDetails} returns this
 */
proto.kurrentdb.protocol.registry.v2.SchemaDetails.prototype.clearTagsMap = function() {
  this.getTagsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    schemaName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    details: (f = msg.getDetails()) && proto.kurrentdb.protocol.registry.v2.SchemaDetails.toObject(includeInstance, f),
    schemaDefinition: msg.getSchemaDefinition_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest}
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest;
  return proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest}
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchemaName(value);
      break;
    case 2:
      var value = new proto.kurrentdb.protocol.registry.v2.SchemaDetails;
      reader.readMessage(value,proto.kurrentdb.protocol.registry.v2.SchemaDetails.deserializeBinaryFromReader);
      msg.setDetails(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSchemaDefinition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchemaName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDetails();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.kurrentdb.protocol.registry.v2.SchemaDetails.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional string schema_name = 1;
 * @return {string}
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest.prototype.getSchemaName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest} returns this
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest.prototype.setSchemaName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional SchemaDetails details = 2;
 * @return {?proto.kurrentdb.protocol.registry.v2.SchemaDetails}
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest.prototype.getDetails = function() {
  return /** @type{?proto.kurrentdb.protocol.registry.v2.SchemaDetails} */ (
    jspb.Message.getWrapperField(this, proto.kurrentdb.protocol.registry.v2.SchemaDetails, 2));
};


/**
 * @param {?proto.kurrentdb.protocol.registry.v2.SchemaDetails|undefined} value
 * @return {!proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest} returns this
*/
proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest.prototype.setDetails = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest} returns this
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest.prototype.clearDetails = function() {
  return this.setDetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest.prototype.hasDetails = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes schema_definition = 3;
 * @return {!(string|Uint8Array)}
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest.prototype.getSchemaDefinition = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes schema_definition = 3;
 * This is a type-conversion wrapper around `getSchemaDefinition()`
 * @return {string}
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest.prototype.getSchemaDefinition_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSchemaDefinition()));
};


/**
 * optional bytes schema_definition = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSchemaDefinition()`
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest.prototype.getSchemaDefinition_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSchemaDefinition()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest} returns this
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest.prototype.setSchemaDefinition = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest} returns this
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest.prototype.clearSchemaDefinition = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest.prototype.hasSchemaDefinition = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.CreateSchemaResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.CreateSchemaResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    schemaVersionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    versionNumber: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.CreateSchemaResponse}
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.CreateSchemaResponse;
  return proto.kurrentdb.protocol.registry.v2.CreateSchemaResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.CreateSchemaResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.CreateSchemaResponse}
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchemaVersionId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVersionNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.CreateSchemaResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.CreateSchemaResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchemaVersionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVersionNumber();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string schema_version_id = 1;
 * @return {string}
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaResponse.prototype.getSchemaVersionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.registry.v2.CreateSchemaResponse} returns this
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaResponse.prototype.setSchemaVersionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 version_number = 2;
 * @return {number}
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaResponse.prototype.getVersionNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.kurrentdb.protocol.registry.v2.CreateSchemaResponse} returns this
 */
proto.kurrentdb.protocol.registry.v2.CreateSchemaResponse.prototype.setVersionNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.UpdateSchemaRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.UpdateSchemaRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.UpdateSchemaRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.UpdateSchemaRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    schemaName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    details: (f = msg.getDetails()) && proto.kurrentdb.protocol.registry.v2.SchemaDetails.toObject(includeInstance, f),
    updateMask: (f = msg.getUpdateMask()) && google_protobuf_field_mask_pb.FieldMask.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.UpdateSchemaRequest}
 */
proto.kurrentdb.protocol.registry.v2.UpdateSchemaRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.UpdateSchemaRequest;
  return proto.kurrentdb.protocol.registry.v2.UpdateSchemaRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.UpdateSchemaRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.UpdateSchemaRequest}
 */
proto.kurrentdb.protocol.registry.v2.UpdateSchemaRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchemaName(value);
      break;
    case 2:
      var value = new proto.kurrentdb.protocol.registry.v2.SchemaDetails;
      reader.readMessage(value,proto.kurrentdb.protocol.registry.v2.SchemaDetails.deserializeBinaryFromReader);
      msg.setDetails(value);
      break;
    case 3:
      var value = new google_protobuf_field_mask_pb.FieldMask;
      reader.readMessage(value,google_protobuf_field_mask_pb.FieldMask.deserializeBinaryFromReader);
      msg.setUpdateMask(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.UpdateSchemaRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.UpdateSchemaRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.UpdateSchemaRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.UpdateSchemaRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchemaName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDetails();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.kurrentdb.protocol.registry.v2.SchemaDetails.serializeBinaryToWriter
    );
  }
  f = message.getUpdateMask();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_field_mask_pb.FieldMask.serializeBinaryToWriter
    );
  }
};


/**
 * optional string schema_name = 1;
 * @return {string}
 */
proto.kurrentdb.protocol.registry.v2.UpdateSchemaRequest.prototype.getSchemaName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.registry.v2.UpdateSchemaRequest} returns this
 */
proto.kurrentdb.protocol.registry.v2.UpdateSchemaRequest.prototype.setSchemaName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional SchemaDetails details = 2;
 * @return {?proto.kurrentdb.protocol.registry.v2.SchemaDetails}
 */
proto.kurrentdb.protocol.registry.v2.UpdateSchemaRequest.prototype.getDetails = function() {
  return /** @type{?proto.kurrentdb.protocol.registry.v2.SchemaDetails} */ (
    jspb.Message.getWrapperField(this, proto.kurrentdb.protocol.registry.v2.SchemaDetails, 2));
};


/**
 * @param {?proto.kurrentdb.protocol.registry.v2.SchemaDetails|undefined} value
 * @return {!proto.kurrentdb.protocol.registry.v2.UpdateSchemaRequest} returns this
*/
proto.kurrentdb.protocol.registry.v2.UpdateSchemaRequest.prototype.setDetails = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kurrentdb.protocol.registry.v2.UpdateSchemaRequest} returns this
 */
proto.kurrentdb.protocol.registry.v2.UpdateSchemaRequest.prototype.clearDetails = function() {
  return this.setDetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kurrentdb.protocol.registry.v2.UpdateSchemaRequest.prototype.hasDetails = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.FieldMask update_mask = 3;
 * @return {?proto.google.protobuf.FieldMask}
 */
proto.kurrentdb.protocol.registry.v2.UpdateSchemaRequest.prototype.getUpdateMask = function() {
  return /** @type{?proto.google.protobuf.FieldMask} */ (
    jspb.Message.getWrapperField(this, google_protobuf_field_mask_pb.FieldMask, 3));
};


/**
 * @param {?proto.google.protobuf.FieldMask|undefined} value
 * @return {!proto.kurrentdb.protocol.registry.v2.UpdateSchemaRequest} returns this
*/
proto.kurrentdb.protocol.registry.v2.UpdateSchemaRequest.prototype.setUpdateMask = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kurrentdb.protocol.registry.v2.UpdateSchemaRequest} returns this
 */
proto.kurrentdb.protocol.registry.v2.UpdateSchemaRequest.prototype.clearUpdateMask = function() {
  return this.setUpdateMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kurrentdb.protocol.registry.v2.UpdateSchemaRequest.prototype.hasUpdateMask = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.UpdateSchemaResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.UpdateSchemaResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.UpdateSchemaResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.UpdateSchemaResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.UpdateSchemaResponse}
 */
proto.kurrentdb.protocol.registry.v2.UpdateSchemaResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.UpdateSchemaResponse;
  return proto.kurrentdb.protocol.registry.v2.UpdateSchemaResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.UpdateSchemaResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.UpdateSchemaResponse}
 */
proto.kurrentdb.protocol.registry.v2.UpdateSchemaResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.UpdateSchemaResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.UpdateSchemaResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.UpdateSchemaResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.UpdateSchemaResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.DeleteSchemaRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    schemaName: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaRequest}
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.DeleteSchemaRequest;
  return proto.kurrentdb.protocol.registry.v2.DeleteSchemaRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaRequest}
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchemaName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.DeleteSchemaRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchemaName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string schema_name = 1;
 * @return {string}
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaRequest.prototype.getSchemaName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaRequest} returns this
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaRequest.prototype.setSchemaName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.DeleteSchemaResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaResponse}
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.DeleteSchemaResponse;
  return proto.kurrentdb.protocol.registry.v2.DeleteSchemaResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaResponse}
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.DeleteSchemaResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.Schema.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.Schema.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.Schema} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.Schema.toObject = function(includeInstance, msg) {
  var f, obj = {
    schemaName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    details: (f = msg.getDetails()) && proto.kurrentdb.protocol.registry.v2.SchemaDetails.toObject(includeInstance, f),
    latestSchemaVersion: jspb.Message.getFieldWithDefault(msg, 4, 0),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedAt: (f = msg.getUpdatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.Schema}
 */
proto.kurrentdb.protocol.registry.v2.Schema.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.Schema;
  return proto.kurrentdb.protocol.registry.v2.Schema.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.Schema} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.Schema}
 */
proto.kurrentdb.protocol.registry.v2.Schema.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchemaName(value);
      break;
    case 2:
      var value = new proto.kurrentdb.protocol.registry.v2.SchemaDetails;
      reader.readMessage(value,proto.kurrentdb.protocol.registry.v2.SchemaDetails.deserializeBinaryFromReader);
      msg.setDetails(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLatestSchemaVersion(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.Schema.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.Schema.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.Schema} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.Schema.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchemaName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDetails();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.kurrentdb.protocol.registry.v2.SchemaDetails.serializeBinaryToWriter
    );
  }
  f = message.getLatestSchemaVersion();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string schema_name = 1;
 * @return {string}
 */
proto.kurrentdb.protocol.registry.v2.Schema.prototype.getSchemaName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.registry.v2.Schema} returns this
 */
proto.kurrentdb.protocol.registry.v2.Schema.prototype.setSchemaName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional SchemaDetails details = 2;
 * @return {?proto.kurrentdb.protocol.registry.v2.SchemaDetails}
 */
proto.kurrentdb.protocol.registry.v2.Schema.prototype.getDetails = function() {
  return /** @type{?proto.kurrentdb.protocol.registry.v2.SchemaDetails} */ (
    jspb.Message.getWrapperField(this, proto.kurrentdb.protocol.registry.v2.SchemaDetails, 2));
};


/**
 * @param {?proto.kurrentdb.protocol.registry.v2.SchemaDetails|undefined} value
 * @return {!proto.kurrentdb.protocol.registry.v2.Schema} returns this
*/
proto.kurrentdb.protocol.registry.v2.Schema.prototype.setDetails = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kurrentdb.protocol.registry.v2.Schema} returns this
 */
proto.kurrentdb.protocol.registry.v2.Schema.prototype.clearDetails = function() {
  return this.setDetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kurrentdb.protocol.registry.v2.Schema.prototype.hasDetails = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 latest_schema_version = 4;
 * @return {number}
 */
proto.kurrentdb.protocol.registry.v2.Schema.prototype.getLatestSchemaVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.kurrentdb.protocol.registry.v2.Schema} returns this
 */
proto.kurrentdb.protocol.registry.v2.Schema.prototype.setLatestSchemaVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.kurrentdb.protocol.registry.v2.Schema.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.kurrentdb.protocol.registry.v2.Schema} returns this
*/
proto.kurrentdb.protocol.registry.v2.Schema.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kurrentdb.protocol.registry.v2.Schema} returns this
 */
proto.kurrentdb.protocol.registry.v2.Schema.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kurrentdb.protocol.registry.v2.Schema.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Timestamp updated_at = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.kurrentdb.protocol.registry.v2.Schema.prototype.getUpdatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.kurrentdb.protocol.registry.v2.Schema} returns this
*/
proto.kurrentdb.protocol.registry.v2.Schema.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kurrentdb.protocol.registry.v2.Schema} returns this
 */
proto.kurrentdb.protocol.registry.v2.Schema.prototype.clearUpdatedAt = function() {
  return this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kurrentdb.protocol.registry.v2.Schema.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.GetSchemaRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.GetSchemaRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    schemaName: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.GetSchemaRequest}
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.GetSchemaRequest;
  return proto.kurrentdb.protocol.registry.v2.GetSchemaRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.GetSchemaRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.GetSchemaRequest}
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchemaName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.GetSchemaRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.GetSchemaRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchemaName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string schema_name = 1;
 * @return {string}
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaRequest.prototype.getSchemaName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.registry.v2.GetSchemaRequest} returns this
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaRequest.prototype.setSchemaName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.GetSchemaResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.GetSchemaResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    schema: (f = msg.getSchema()) && proto.kurrentdb.protocol.registry.v2.Schema.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.GetSchemaResponse}
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.GetSchemaResponse;
  return proto.kurrentdb.protocol.registry.v2.GetSchemaResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.GetSchemaResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.GetSchemaResponse}
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.kurrentdb.protocol.registry.v2.Schema;
      reader.readMessage(value,proto.kurrentdb.protocol.registry.v2.Schema.deserializeBinaryFromReader);
      msg.setSchema(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.GetSchemaResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.GetSchemaResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchema();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.kurrentdb.protocol.registry.v2.Schema.serializeBinaryToWriter
    );
  }
};


/**
 * optional Schema schema = 1;
 * @return {?proto.kurrentdb.protocol.registry.v2.Schema}
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaResponse.prototype.getSchema = function() {
  return /** @type{?proto.kurrentdb.protocol.registry.v2.Schema} */ (
    jspb.Message.getWrapperField(this, proto.kurrentdb.protocol.registry.v2.Schema, 1));
};


/**
 * @param {?proto.kurrentdb.protocol.registry.v2.Schema|undefined} value
 * @return {!proto.kurrentdb.protocol.registry.v2.GetSchemaResponse} returns this
*/
proto.kurrentdb.protocol.registry.v2.GetSchemaResponse.prototype.setSchema = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kurrentdb.protocol.registry.v2.GetSchemaResponse} returns this
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaResponse.prototype.clearSchema = function() {
  return this.setSchema(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaResponse.prototype.hasSchema = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.ListSchemasRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.ListSchemasRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.ListSchemasRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.ListSchemasRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    schemaNamePrefix: jspb.Message.getFieldWithDefault(msg, 1, ""),
    schemaTagsMap: (f = msg.getSchemaTagsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.ListSchemasRequest}
 */
proto.kurrentdb.protocol.registry.v2.ListSchemasRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.ListSchemasRequest;
  return proto.kurrentdb.protocol.registry.v2.ListSchemasRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.ListSchemasRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.ListSchemasRequest}
 */
proto.kurrentdb.protocol.registry.v2.ListSchemasRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchemaNamePrefix(value);
      break;
    case 2:
      var value = msg.getSchemaTagsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.ListSchemasRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.ListSchemasRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.ListSchemasRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.ListSchemasRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSchemaTagsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string schema_name_prefix = 1;
 * @return {string}
 */
proto.kurrentdb.protocol.registry.v2.ListSchemasRequest.prototype.getSchemaNamePrefix = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.registry.v2.ListSchemasRequest} returns this
 */
proto.kurrentdb.protocol.registry.v2.ListSchemasRequest.prototype.setSchemaNamePrefix = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.kurrentdb.protocol.registry.v2.ListSchemasRequest} returns this
 */
proto.kurrentdb.protocol.registry.v2.ListSchemasRequest.prototype.clearSchemaNamePrefix = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kurrentdb.protocol.registry.v2.ListSchemasRequest.prototype.hasSchemaNamePrefix = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * map<string, string> schema_tags = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.kurrentdb.protocol.registry.v2.ListSchemasRequest.prototype.getSchemaTagsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.kurrentdb.protocol.registry.v2.ListSchemasRequest} returns this
 */
proto.kurrentdb.protocol.registry.v2.ListSchemasRequest.prototype.clearSchemaTagsMap = function() {
  this.getSchemaTagsMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.kurrentdb.protocol.registry.v2.ListSchemasResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.ListSchemasResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.ListSchemasResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.ListSchemasResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.ListSchemasResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    schemasList: jspb.Message.toObjectList(msg.getSchemasList(),
    proto.kurrentdb.protocol.registry.v2.Schema.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.ListSchemasResponse}
 */
proto.kurrentdb.protocol.registry.v2.ListSchemasResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.ListSchemasResponse;
  return proto.kurrentdb.protocol.registry.v2.ListSchemasResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.ListSchemasResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.ListSchemasResponse}
 */
proto.kurrentdb.protocol.registry.v2.ListSchemasResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.kurrentdb.protocol.registry.v2.Schema;
      reader.readMessage(value,proto.kurrentdb.protocol.registry.v2.Schema.deserializeBinaryFromReader);
      msg.addSchemas(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.ListSchemasResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.ListSchemasResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.ListSchemasResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.ListSchemasResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchemasList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.kurrentdb.protocol.registry.v2.Schema.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Schema schemas = 1;
 * @return {!Array<!proto.kurrentdb.protocol.registry.v2.Schema>}
 */
proto.kurrentdb.protocol.registry.v2.ListSchemasResponse.prototype.getSchemasList = function() {
  return /** @type{!Array<!proto.kurrentdb.protocol.registry.v2.Schema>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.kurrentdb.protocol.registry.v2.Schema, 1));
};


/**
 * @param {!Array<!proto.kurrentdb.protocol.registry.v2.Schema>} value
 * @return {!proto.kurrentdb.protocol.registry.v2.ListSchemasResponse} returns this
*/
proto.kurrentdb.protocol.registry.v2.ListSchemasResponse.prototype.setSchemasList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.kurrentdb.protocol.registry.v2.Schema=} opt_value
 * @param {number=} opt_index
 * @return {!proto.kurrentdb.protocol.registry.v2.Schema}
 */
proto.kurrentdb.protocol.registry.v2.ListSchemasResponse.prototype.addSchemas = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.kurrentdb.protocol.registry.v2.Schema, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.kurrentdb.protocol.registry.v2.ListSchemasResponse} returns this
 */
proto.kurrentdb.protocol.registry.v2.ListSchemasResponse.prototype.clearSchemasList = function() {
  return this.setSchemasList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.LookupSchemaNameRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.LookupSchemaNameRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.LookupSchemaNameRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.LookupSchemaNameRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    schemaVersionId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.LookupSchemaNameRequest}
 */
proto.kurrentdb.protocol.registry.v2.LookupSchemaNameRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.LookupSchemaNameRequest;
  return proto.kurrentdb.protocol.registry.v2.LookupSchemaNameRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.LookupSchemaNameRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.LookupSchemaNameRequest}
 */
proto.kurrentdb.protocol.registry.v2.LookupSchemaNameRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchemaVersionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.LookupSchemaNameRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.LookupSchemaNameRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.LookupSchemaNameRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.LookupSchemaNameRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchemaVersionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string schema_version_id = 1;
 * @return {string}
 */
proto.kurrentdb.protocol.registry.v2.LookupSchemaNameRequest.prototype.getSchemaVersionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.registry.v2.LookupSchemaNameRequest} returns this
 */
proto.kurrentdb.protocol.registry.v2.LookupSchemaNameRequest.prototype.setSchemaVersionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.LookupSchemaNameResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.LookupSchemaNameResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.LookupSchemaNameResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.LookupSchemaNameResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    schemaName: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.LookupSchemaNameResponse}
 */
proto.kurrentdb.protocol.registry.v2.LookupSchemaNameResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.LookupSchemaNameResponse;
  return proto.kurrentdb.protocol.registry.v2.LookupSchemaNameResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.LookupSchemaNameResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.LookupSchemaNameResponse}
 */
proto.kurrentdb.protocol.registry.v2.LookupSchemaNameResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchemaName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.LookupSchemaNameResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.LookupSchemaNameResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.LookupSchemaNameResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.LookupSchemaNameResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchemaName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string schema_name = 1;
 * @return {string}
 */
proto.kurrentdb.protocol.registry.v2.LookupSchemaNameResponse.prototype.getSchemaName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.registry.v2.LookupSchemaNameResponse} returns this
 */
proto.kurrentdb.protocol.registry.v2.LookupSchemaNameResponse.prototype.setSchemaName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    schemaName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    schemaDefinition: msg.getSchemaDefinition_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionRequest}
 */
proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionRequest;
  return proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionRequest}
 */
proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchemaName(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSchemaDefinition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchemaName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSchemaDefinition_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional string schema_name = 1;
 * @return {string}
 */
proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionRequest.prototype.getSchemaName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionRequest} returns this
 */
proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionRequest.prototype.setSchemaName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes schema_definition = 2;
 * @return {!(string|Uint8Array)}
 */
proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionRequest.prototype.getSchemaDefinition = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes schema_definition = 2;
 * This is a type-conversion wrapper around `getSchemaDefinition()`
 * @return {string}
 */
proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionRequest.prototype.getSchemaDefinition_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSchemaDefinition()));
};


/**
 * optional bytes schema_definition = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSchemaDefinition()`
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionRequest.prototype.getSchemaDefinition_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSchemaDefinition()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionRequest} returns this
 */
proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionRequest.prototype.setSchemaDefinition = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    schemaVersionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    versionNumber: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionResponse}
 */
proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionResponse;
  return proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionResponse}
 */
proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchemaVersionId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVersionNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchemaVersionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVersionNumber();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string schema_version_id = 1;
 * @return {string}
 */
proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionResponse.prototype.getSchemaVersionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionResponse} returns this
 */
proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionResponse.prototype.setSchemaVersionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 version_number = 2;
 * @return {number}
 */
proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionResponse.prototype.getVersionNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionResponse} returns this
 */
proto.kurrentdb.protocol.registry.v2.RegisterSchemaVersionResponse.prototype.setVersionNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    schemaName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    versionsList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsRequest}
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsRequest;
  return proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsRequest}
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchemaName(value);
      break;
    case 2:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addVersions(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchemaName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVersionsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      2,
      f
    );
  }
};


/**
 * optional string schema_name = 1;
 * @return {string}
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsRequest.prototype.getSchemaName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsRequest} returns this
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsRequest.prototype.setSchemaName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated int32 versions = 2;
 * @return {!Array<number>}
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsRequest.prototype.getVersionsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsRequest} returns this
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsRequest.prototype.setVersionsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsRequest} returns this
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsRequest.prototype.addVersions = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsRequest} returns this
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsRequest.prototype.clearVersionsList = function() {
  return this.setVersionsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    errorsList: jspb.Message.toObjectList(msg.getErrorsList(),
    proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.SchemaVersionError.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse}
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse;
  return proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse}
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.SchemaVersionError;
      reader.readMessage(value,proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.SchemaVersionError.deserializeBinaryFromReader);
      msg.addErrors(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErrorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.SchemaVersionError.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.SchemaVersionError.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.SchemaVersionError.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.SchemaVersionError} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.SchemaVersionError.toObject = function(includeInstance, msg) {
  var f, obj = {
    versionNumber: jspb.Message.getFieldWithDefault(msg, 1, 0),
    error: (f = msg.getError()) && core_pb.ErrorDetails.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.SchemaVersionError}
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.SchemaVersionError.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.SchemaVersionError;
  return proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.SchemaVersionError.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.SchemaVersionError} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.SchemaVersionError}
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.SchemaVersionError.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVersionNumber(value);
      break;
    case 2:
      var value = new core_pb.ErrorDetails;
      reader.readMessage(value,core_pb.ErrorDetails.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.SchemaVersionError.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.SchemaVersionError.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.SchemaVersionError} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.SchemaVersionError.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVersionNumber();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      core_pb.ErrorDetails.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 version_number = 1;
 * @return {number}
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.SchemaVersionError.prototype.getVersionNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.SchemaVersionError} returns this
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.SchemaVersionError.prototype.setVersionNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional ErrorDetails error = 2;
 * @return {?proto.kurrentdb.protocol.registry.v2.ErrorDetails}
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.SchemaVersionError.prototype.getError = function() {
  return /** @type{?proto.kurrentdb.protocol.registry.v2.ErrorDetails} */ (
    jspb.Message.getWrapperField(this, core_pb.ErrorDetails, 2));
};


/**
 * @param {?proto.kurrentdb.protocol.registry.v2.ErrorDetails|undefined} value
 * @return {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.SchemaVersionError} returns this
*/
proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.SchemaVersionError.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.SchemaVersionError} returns this
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.SchemaVersionError.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.SchemaVersionError.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated SchemaVersionError errors = 1;
 * @return {!Array<!proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.SchemaVersionError>}
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.prototype.getErrorsList = function() {
  return /** @type{!Array<!proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.SchemaVersionError>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.SchemaVersionError, 1));
};


/**
 * @param {!Array<!proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.SchemaVersionError>} value
 * @return {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse} returns this
*/
proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.prototype.setErrorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.SchemaVersionError=} opt_value
 * @param {number=} opt_index
 * @return {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.SchemaVersionError}
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.prototype.addErrors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.SchemaVersionError, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse} returns this
 */
proto.kurrentdb.protocol.registry.v2.DeleteSchemaVersionsResponse.prototype.clearErrorsList = function() {
  return this.setErrorsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.SchemaVersion.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.SchemaVersion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.SchemaVersion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.SchemaVersion.toObject = function(includeInstance, msg) {
  var f, obj = {
    schemaVersionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    versionNumber: jspb.Message.getFieldWithDefault(msg, 2, 0),
    schemaDefinition: msg.getSchemaDefinition_asB64(),
    dataFormat: jspb.Message.getFieldWithDefault(msg, 4, 0),
    registeredAt: (f = msg.getRegisteredAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.SchemaVersion}
 */
proto.kurrentdb.protocol.registry.v2.SchemaVersion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.SchemaVersion;
  return proto.kurrentdb.protocol.registry.v2.SchemaVersion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.SchemaVersion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.SchemaVersion}
 */
proto.kurrentdb.protocol.registry.v2.SchemaVersion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchemaVersionId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVersionNumber(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSchemaDefinition(value);
      break;
    case 4:
      var value = /** @type {!proto.kurrentdb.protocol.registry.v2.SchemaDataFormat} */ (reader.readEnum());
      msg.setDataFormat(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setRegisteredAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.SchemaVersion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.SchemaVersion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.SchemaVersion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.SchemaVersion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchemaVersionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVersionNumber();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getSchemaDefinition_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getDataFormat();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getRegisteredAt();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string schema_version_id = 1;
 * @return {string}
 */
proto.kurrentdb.protocol.registry.v2.SchemaVersion.prototype.getSchemaVersionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.registry.v2.SchemaVersion} returns this
 */
proto.kurrentdb.protocol.registry.v2.SchemaVersion.prototype.setSchemaVersionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 version_number = 2;
 * @return {number}
 */
proto.kurrentdb.protocol.registry.v2.SchemaVersion.prototype.getVersionNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.kurrentdb.protocol.registry.v2.SchemaVersion} returns this
 */
proto.kurrentdb.protocol.registry.v2.SchemaVersion.prototype.setVersionNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bytes schema_definition = 3;
 * @return {!(string|Uint8Array)}
 */
proto.kurrentdb.protocol.registry.v2.SchemaVersion.prototype.getSchemaDefinition = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes schema_definition = 3;
 * This is a type-conversion wrapper around `getSchemaDefinition()`
 * @return {string}
 */
proto.kurrentdb.protocol.registry.v2.SchemaVersion.prototype.getSchemaDefinition_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSchemaDefinition()));
};


/**
 * optional bytes schema_definition = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSchemaDefinition()`
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.SchemaVersion.prototype.getSchemaDefinition_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSchemaDefinition()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.kurrentdb.protocol.registry.v2.SchemaVersion} returns this
 */
proto.kurrentdb.protocol.registry.v2.SchemaVersion.prototype.setSchemaDefinition = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional SchemaDataFormat data_format = 4;
 * @return {!proto.kurrentdb.protocol.registry.v2.SchemaDataFormat}
 */
proto.kurrentdb.protocol.registry.v2.SchemaVersion.prototype.getDataFormat = function() {
  return /** @type {!proto.kurrentdb.protocol.registry.v2.SchemaDataFormat} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.kurrentdb.protocol.registry.v2.SchemaDataFormat} value
 * @return {!proto.kurrentdb.protocol.registry.v2.SchemaVersion} returns this
 */
proto.kurrentdb.protocol.registry.v2.SchemaVersion.prototype.setDataFormat = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional google.protobuf.Timestamp registered_at = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.kurrentdb.protocol.registry.v2.SchemaVersion.prototype.getRegisteredAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.kurrentdb.protocol.registry.v2.SchemaVersion} returns this
*/
proto.kurrentdb.protocol.registry.v2.SchemaVersion.prototype.setRegisteredAt = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kurrentdb.protocol.registry.v2.SchemaVersion} returns this
 */
proto.kurrentdb.protocol.registry.v2.SchemaVersion.prototype.clearRegisteredAt = function() {
  return this.setRegisteredAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kurrentdb.protocol.registry.v2.SchemaVersion.prototype.hasRegisteredAt = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    schemaVersionId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdRequest}
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdRequest;
  return proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdRequest}
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchemaVersionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchemaVersionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string schema_version_id = 1;
 * @return {string}
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdRequest.prototype.getSchemaVersionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdRequest} returns this
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdRequest.prototype.setSchemaVersionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    version: (f = msg.getVersion()) && proto.kurrentdb.protocol.registry.v2.SchemaVersion.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdResponse}
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdResponse;
  return proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdResponse}
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.kurrentdb.protocol.registry.v2.SchemaVersion;
      reader.readMessage(value,proto.kurrentdb.protocol.registry.v2.SchemaVersion.deserializeBinaryFromReader);
      msg.setVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVersion();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.kurrentdb.protocol.registry.v2.SchemaVersion.serializeBinaryToWriter
    );
  }
};


/**
 * optional SchemaVersion version = 1;
 * @return {?proto.kurrentdb.protocol.registry.v2.SchemaVersion}
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdResponse.prototype.getVersion = function() {
  return /** @type{?proto.kurrentdb.protocol.registry.v2.SchemaVersion} */ (
    jspb.Message.getWrapperField(this, proto.kurrentdb.protocol.registry.v2.SchemaVersion, 1));
};


/**
 * @param {?proto.kurrentdb.protocol.registry.v2.SchemaVersion|undefined} value
 * @return {!proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdResponse} returns this
*/
proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdResponse.prototype.setVersion = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdResponse} returns this
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdResponse.prototype.clearVersion = function() {
  return this.setVersion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaVersionByIdResponse.prototype.hasVersion = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaVersionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.GetSchemaVersionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.GetSchemaVersionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaVersionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    schemaName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    versionNumber: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.GetSchemaVersionRequest}
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaVersionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.GetSchemaVersionRequest;
  return proto.kurrentdb.protocol.registry.v2.GetSchemaVersionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.GetSchemaVersionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.GetSchemaVersionRequest}
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaVersionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchemaName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVersionNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaVersionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.GetSchemaVersionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.GetSchemaVersionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaVersionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchemaName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string schema_name = 1;
 * @return {string}
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaVersionRequest.prototype.getSchemaName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.registry.v2.GetSchemaVersionRequest} returns this
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaVersionRequest.prototype.setSchemaName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 version_number = 2;
 * @return {number}
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaVersionRequest.prototype.getVersionNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.kurrentdb.protocol.registry.v2.GetSchemaVersionRequest} returns this
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaVersionRequest.prototype.setVersionNumber = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.kurrentdb.protocol.registry.v2.GetSchemaVersionRequest} returns this
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaVersionRequest.prototype.clearVersionNumber = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaVersionRequest.prototype.hasVersionNumber = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaVersionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.GetSchemaVersionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.GetSchemaVersionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaVersionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    version: (f = msg.getVersion()) && proto.kurrentdb.protocol.registry.v2.SchemaVersion.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.GetSchemaVersionResponse}
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaVersionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.GetSchemaVersionResponse;
  return proto.kurrentdb.protocol.registry.v2.GetSchemaVersionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.GetSchemaVersionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.GetSchemaVersionResponse}
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaVersionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.kurrentdb.protocol.registry.v2.SchemaVersion;
      reader.readMessage(value,proto.kurrentdb.protocol.registry.v2.SchemaVersion.deserializeBinaryFromReader);
      msg.setVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaVersionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.GetSchemaVersionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.GetSchemaVersionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaVersionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVersion();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.kurrentdb.protocol.registry.v2.SchemaVersion.serializeBinaryToWriter
    );
  }
};


/**
 * optional SchemaVersion version = 1;
 * @return {?proto.kurrentdb.protocol.registry.v2.SchemaVersion}
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaVersionResponse.prototype.getVersion = function() {
  return /** @type{?proto.kurrentdb.protocol.registry.v2.SchemaVersion} */ (
    jspb.Message.getWrapperField(this, proto.kurrentdb.protocol.registry.v2.SchemaVersion, 1));
};


/**
 * @param {?proto.kurrentdb.protocol.registry.v2.SchemaVersion|undefined} value
 * @return {!proto.kurrentdb.protocol.registry.v2.GetSchemaVersionResponse} returns this
*/
proto.kurrentdb.protocol.registry.v2.GetSchemaVersionResponse.prototype.setVersion = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kurrentdb.protocol.registry.v2.GetSchemaVersionResponse} returns this
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaVersionResponse.prototype.clearVersion = function() {
  return this.setVersion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kurrentdb.protocol.registry.v2.GetSchemaVersionResponse.prototype.hasVersion = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    schemaName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    includeDefinition: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsRequest}
 */
proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsRequest;
  return proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsRequest}
 */
proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchemaName(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeDefinition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchemaName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIncludeDefinition();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string schema_name = 1;
 * @return {string}
 */
proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsRequest.prototype.getSchemaName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsRequest} returns this
 */
proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsRequest.prototype.setSchemaName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool include_definition = 2;
 * @return {boolean}
 */
proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsRequest.prototype.getIncludeDefinition = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsRequest} returns this
 */
proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsRequest.prototype.setIncludeDefinition = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    versionsList: jspb.Message.toObjectList(msg.getVersionsList(),
    proto.kurrentdb.protocol.registry.v2.SchemaVersion.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsResponse}
 */
proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsResponse;
  return proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsResponse}
 */
proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.kurrentdb.protocol.registry.v2.SchemaVersion;
      reader.readMessage(value,proto.kurrentdb.protocol.registry.v2.SchemaVersion.deserializeBinaryFromReader);
      msg.addVersions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVersionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.kurrentdb.protocol.registry.v2.SchemaVersion.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SchemaVersion versions = 1;
 * @return {!Array<!proto.kurrentdb.protocol.registry.v2.SchemaVersion>}
 */
proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsResponse.prototype.getVersionsList = function() {
  return /** @type{!Array<!proto.kurrentdb.protocol.registry.v2.SchemaVersion>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.kurrentdb.protocol.registry.v2.SchemaVersion, 1));
};


/**
 * @param {!Array<!proto.kurrentdb.protocol.registry.v2.SchemaVersion>} value
 * @return {!proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsResponse} returns this
*/
proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsResponse.prototype.setVersionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.kurrentdb.protocol.registry.v2.SchemaVersion=} opt_value
 * @param {number=} opt_index
 * @return {!proto.kurrentdb.protocol.registry.v2.SchemaVersion}
 */
proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsResponse.prototype.addVersions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.kurrentdb.protocol.registry.v2.SchemaVersion, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsResponse} returns this
 */
proto.kurrentdb.protocol.registry.v2.ListSchemaVersionsResponse.prototype.clearVersionsList = function() {
  return this.setVersionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.RegisteredSchema.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.RegisteredSchema.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.RegisteredSchema} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.RegisteredSchema.toObject = function(includeInstance, msg) {
  var f, obj = {
    schemaName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    schemaVersionId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    versionNumber: jspb.Message.getFieldWithDefault(msg, 3, 0),
    schemaDefinition: msg.getSchemaDefinition_asB64(),
    dataFormat: jspb.Message.getFieldWithDefault(msg, 5, 0),
    compatibility: jspb.Message.getFieldWithDefault(msg, 6, 0),
    tagsMap: (f = msg.getTagsMap()) ? f.toObject(includeInstance, undefined) : [],
    registeredAt: (f = msg.getRegisteredAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.RegisteredSchema}
 */
proto.kurrentdb.protocol.registry.v2.RegisteredSchema.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.RegisteredSchema;
  return proto.kurrentdb.protocol.registry.v2.RegisteredSchema.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.RegisteredSchema} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.RegisteredSchema}
 */
proto.kurrentdb.protocol.registry.v2.RegisteredSchema.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchemaName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchemaVersionId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVersionNumber(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSchemaDefinition(value);
      break;
    case 5:
      var value = /** @type {!proto.kurrentdb.protocol.registry.v2.SchemaDataFormat} */ (reader.readEnum());
      msg.setDataFormat(value);
      break;
    case 6:
      var value = /** @type {!proto.kurrentdb.protocol.registry.v2.CompatibilityMode} */ (reader.readEnum());
      msg.setCompatibility(value);
      break;
    case 7:
      var value = msg.getTagsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 8:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setRegisteredAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.RegisteredSchema.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.RegisteredSchema.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.RegisteredSchema} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.RegisteredSchema.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchemaName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSchemaVersionId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getVersionNumber();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getSchemaDefinition_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getDataFormat();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getCompatibility();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getTagsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(7, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getRegisteredAt();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string schema_name = 1;
 * @return {string}
 */
proto.kurrentdb.protocol.registry.v2.RegisteredSchema.prototype.getSchemaName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.registry.v2.RegisteredSchema} returns this
 */
proto.kurrentdb.protocol.registry.v2.RegisteredSchema.prototype.setSchemaName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string schema_version_id = 2;
 * @return {string}
 */
proto.kurrentdb.protocol.registry.v2.RegisteredSchema.prototype.getSchemaVersionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.registry.v2.RegisteredSchema} returns this
 */
proto.kurrentdb.protocol.registry.v2.RegisteredSchema.prototype.setSchemaVersionId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 version_number = 3;
 * @return {number}
 */
proto.kurrentdb.protocol.registry.v2.RegisteredSchema.prototype.getVersionNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.kurrentdb.protocol.registry.v2.RegisteredSchema} returns this
 */
proto.kurrentdb.protocol.registry.v2.RegisteredSchema.prototype.setVersionNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bytes schema_definition = 4;
 * @return {!(string|Uint8Array)}
 */
proto.kurrentdb.protocol.registry.v2.RegisteredSchema.prototype.getSchemaDefinition = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes schema_definition = 4;
 * This is a type-conversion wrapper around `getSchemaDefinition()`
 * @return {string}
 */
proto.kurrentdb.protocol.registry.v2.RegisteredSchema.prototype.getSchemaDefinition_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSchemaDefinition()));
};


/**
 * optional bytes schema_definition = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSchemaDefinition()`
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.RegisteredSchema.prototype.getSchemaDefinition_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSchemaDefinition()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.kurrentdb.protocol.registry.v2.RegisteredSchema} returns this
 */
proto.kurrentdb.protocol.registry.v2.RegisteredSchema.prototype.setSchemaDefinition = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional SchemaDataFormat data_format = 5;
 * @return {!proto.kurrentdb.protocol.registry.v2.SchemaDataFormat}
 */
proto.kurrentdb.protocol.registry.v2.RegisteredSchema.prototype.getDataFormat = function() {
  return /** @type {!proto.kurrentdb.protocol.registry.v2.SchemaDataFormat} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.kurrentdb.protocol.registry.v2.SchemaDataFormat} value
 * @return {!proto.kurrentdb.protocol.registry.v2.RegisteredSchema} returns this
 */
proto.kurrentdb.protocol.registry.v2.RegisteredSchema.prototype.setDataFormat = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional CompatibilityMode compatibility = 6;
 * @return {!proto.kurrentdb.protocol.registry.v2.CompatibilityMode}
 */
proto.kurrentdb.protocol.registry.v2.RegisteredSchema.prototype.getCompatibility = function() {
  return /** @type {!proto.kurrentdb.protocol.registry.v2.CompatibilityMode} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.kurrentdb.protocol.registry.v2.CompatibilityMode} value
 * @return {!proto.kurrentdb.protocol.registry.v2.RegisteredSchema} returns this
 */
proto.kurrentdb.protocol.registry.v2.RegisteredSchema.prototype.setCompatibility = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * map<string, string> tags = 7;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.kurrentdb.protocol.registry.v2.RegisteredSchema.prototype.getTagsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 7, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.kurrentdb.protocol.registry.v2.RegisteredSchema} returns this
 */
proto.kurrentdb.protocol.registry.v2.RegisteredSchema.prototype.clearTagsMap = function() {
  this.getTagsMap().clear();
  return this;};


/**
 * optional google.protobuf.Timestamp registered_at = 8;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.kurrentdb.protocol.registry.v2.RegisteredSchema.prototype.getRegisteredAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.kurrentdb.protocol.registry.v2.RegisteredSchema} returns this
*/
proto.kurrentdb.protocol.registry.v2.RegisteredSchema.prototype.setRegisteredAt = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kurrentdb.protocol.registry.v2.RegisteredSchema} returns this
 */
proto.kurrentdb.protocol.registry.v2.RegisteredSchema.prototype.clearRegisteredAt = function() {
  return this.setRegisteredAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kurrentdb.protocol.registry.v2.RegisteredSchema.prototype.hasRegisteredAt = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    schemaVersionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    schemaNamePrefix: jspb.Message.getFieldWithDefault(msg, 2, ""),
    schemaTagsMap: (f = msg.getSchemaTagsMap()) ? f.toObject(includeInstance, undefined) : [],
    includeDefinition: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasRequest}
 */
proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasRequest;
  return proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasRequest}
 */
proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchemaVersionId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSchemaNamePrefix(value);
      break;
    case 3:
      var value = msg.getSchemaTagsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeDefinition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSchemaTagsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getIncludeDefinition();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string schema_version_id = 1;
 * @return {string}
 */
proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasRequest.prototype.getSchemaVersionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasRequest} returns this
 */
proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasRequest.prototype.setSchemaVersionId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasRequest} returns this
 */
proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasRequest.prototype.clearSchemaVersionId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasRequest.prototype.hasSchemaVersionId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string schema_name_prefix = 2;
 * @return {string}
 */
proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasRequest.prototype.getSchemaNamePrefix = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasRequest} returns this
 */
proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasRequest.prototype.setSchemaNamePrefix = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasRequest} returns this
 */
proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasRequest.prototype.clearSchemaNamePrefix = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasRequest.prototype.hasSchemaNamePrefix = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * map<string, string> schema_tags = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasRequest.prototype.getSchemaTagsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasRequest} returns this
 */
proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasRequest.prototype.clearSchemaTagsMap = function() {
  this.getSchemaTagsMap().clear();
  return this;};


/**
 * optional bool include_definition = 4;
 * @return {boolean}
 */
proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasRequest.prototype.getIncludeDefinition = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasRequest} returns this
 */
proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasRequest.prototype.setIncludeDefinition = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    schemasList: jspb.Message.toObjectList(msg.getSchemasList(),
    proto.kurrentdb.protocol.registry.v2.RegisteredSchema.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasResponse}
 */
proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasResponse;
  return proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasResponse}
 */
proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.kurrentdb.protocol.registry.v2.RegisteredSchema;
      reader.readMessage(value,proto.kurrentdb.protocol.registry.v2.RegisteredSchema.deserializeBinaryFromReader);
      msg.addSchemas(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSchemasList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.kurrentdb.protocol.registry.v2.RegisteredSchema.serializeBinaryToWriter
    );
  }
};


/**
 * repeated RegisteredSchema schemas = 1;
 * @return {!Array<!proto.kurrentdb.protocol.registry.v2.RegisteredSchema>}
 */
proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasResponse.prototype.getSchemasList = function() {
  return /** @type{!Array<!proto.kurrentdb.protocol.registry.v2.RegisteredSchema>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.kurrentdb.protocol.registry.v2.RegisteredSchema, 1));
};


/**
 * @param {!Array<!proto.kurrentdb.protocol.registry.v2.RegisteredSchema>} value
 * @return {!proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasResponse} returns this
*/
proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasResponse.prototype.setSchemasList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.kurrentdb.protocol.registry.v2.RegisteredSchema=} opt_value
 * @param {number=} opt_index
 * @return {!proto.kurrentdb.protocol.registry.v2.RegisteredSchema}
 */
proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasResponse.prototype.addSchemas = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.kurrentdb.protocol.registry.v2.RegisteredSchema, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasResponse} returns this
 */
proto.kurrentdb.protocol.registry.v2.ListRegisteredSchemasResponse.prototype.clearSchemasList = function() {
  return this.setSchemasList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestsList: jspb.Message.toObjectList(msg.getRequestsList(),
    proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest.toObject, includeInstance),
    keepOrder: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    stopOnError: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasRequest}
 */
proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasRequest;
  return proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasRequest}
 */
proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest;
      reader.readMessage(value,proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest.deserializeBinaryFromReader);
      msg.addRequests(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setKeepOrder(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStopOnError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest.serializeBinaryToWriter
    );
  }
  f = message.getKeepOrder();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getStopOnError();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * repeated CreateSchemaRequest requests = 1;
 * @return {!Array<!proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest>}
 */
proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasRequest.prototype.getRequestsList = function() {
  return /** @type{!Array<!proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest, 1));
};


/**
 * @param {!Array<!proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest>} value
 * @return {!proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasRequest} returns this
*/
proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasRequest.prototype.setRequestsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest=} opt_value
 * @param {number=} opt_index
 * @return {!proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest}
 */
proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasRequest.prototype.addRequests = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.kurrentdb.protocol.registry.v2.CreateSchemaRequest, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasRequest} returns this
 */
proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasRequest.prototype.clearRequestsList = function() {
  return this.setRequestsList([]);
};


/**
 * optional bool keep_order = 2;
 * @return {boolean}
 */
proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasRequest.prototype.getKeepOrder = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasRequest} returns this
 */
proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasRequest.prototype.setKeepOrder = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool stop_on_error = 3;
 * @return {boolean}
 */
proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasRequest.prototype.getStopOnError = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasRequest} returns this
 */
proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasRequest.prototype.setStopOnError = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    duration: (f = msg.getDuration()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    responsesList: jspb.Message.toObjectList(msg.getResponsesList(),
    proto.kurrentdb.protocol.registry.v2.CreateSchemaResponse.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasResponse}
 */
proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasResponse;
  return proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasResponse}
 */
proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setDuration(value);
      break;
    case 2:
      var value = new proto.kurrentdb.protocol.registry.v2.CreateSchemaResponse;
      reader.readMessage(value,proto.kurrentdb.protocol.registry.v2.CreateSchemaResponse.deserializeBinaryFromReader);
      msg.addResponses(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDuration();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getResponsesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.kurrentdb.protocol.registry.v2.CreateSchemaResponse.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Duration duration = 1;
 * @return {?proto.google.protobuf.Duration}
 */
proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasResponse.prototype.getDuration = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 1));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasResponse} returns this
*/
proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasResponse.prototype.setDuration = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasResponse} returns this
 */
proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasResponse.prototype.clearDuration = function() {
  return this.setDuration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasResponse.prototype.hasDuration = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated CreateSchemaResponse responses = 2;
 * @return {!Array<!proto.kurrentdb.protocol.registry.v2.CreateSchemaResponse>}
 */
proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasResponse.prototype.getResponsesList = function() {
  return /** @type{!Array<!proto.kurrentdb.protocol.registry.v2.CreateSchemaResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.kurrentdb.protocol.registry.v2.CreateSchemaResponse, 2));
};


/**
 * @param {!Array<!proto.kurrentdb.protocol.registry.v2.CreateSchemaResponse>} value
 * @return {!proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasResponse} returns this
*/
proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasResponse.prototype.setResponsesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.kurrentdb.protocol.registry.v2.CreateSchemaResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.kurrentdb.protocol.registry.v2.CreateSchemaResponse}
 */
proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasResponse.prototype.addResponses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.kurrentdb.protocol.registry.v2.CreateSchemaResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasResponse} returns this
 */
proto.kurrentdb.protocol.registry.v2.BulkRegisterSchemasResponse.prototype.clearResponsesList = function() {
  return this.setResponsesList([]);
};


goog.object.extend(exports, proto.kurrentdb.protocol.registry.v2);
