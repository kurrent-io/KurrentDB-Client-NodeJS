// source: kurrentdb/protocols/v2/errors.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var kurrentdb_protocols_v2_rpc_pb = require('../../../kurrentdb/protocols/v2/rpc_pb.js');
goog.object.extend(proto, kurrentdb_protocols_v2_rpc_pb);
goog.exportSymbol('proto.kurrentdb.protocol.v2.common.errors.AccessDeniedErrorDetails', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.v2.common.errors.CommonError', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.FieldViolation', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.v2.common.errors.NodeInfoErrorDetails', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.v2.common.errors.NotLeaderNodeErrorDetails', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.v2.common.errors.RetryInfoErrorDetails', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.v2.common.errors.AccessDeniedErrorDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.v2.common.errors.AccessDeniedErrorDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.v2.common.errors.AccessDeniedErrorDetails.displayName = 'proto.kurrentdb.protocol.v2.common.errors.AccessDeniedErrorDetails';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.repeatedFields_, null);
};
goog.inherits(proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.displayName = 'proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.FieldViolation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.FieldViolation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.FieldViolation.displayName = 'proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.FieldViolation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.v2.common.errors.NotLeaderNodeErrorDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.v2.common.errors.NotLeaderNodeErrorDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.v2.common.errors.NotLeaderNodeErrorDetails.displayName = 'proto.kurrentdb.protocol.v2.common.errors.NotLeaderNodeErrorDetails';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.v2.common.errors.RetryInfoErrorDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.v2.common.errors.RetryInfoErrorDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.v2.common.errors.RetryInfoErrorDetails.displayName = 'proto.kurrentdb.protocol.v2.common.errors.RetryInfoErrorDetails';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.v2.common.errors.NodeInfoErrorDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.v2.common.errors.NodeInfoErrorDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.v2.common.errors.NodeInfoErrorDetails.displayName = 'proto.kurrentdb.protocol.v2.common.errors.NodeInfoErrorDetails';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.v2.common.errors.AccessDeniedErrorDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.v2.common.errors.AccessDeniedErrorDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.v2.common.errors.AccessDeniedErrorDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.v2.common.errors.AccessDeniedErrorDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    scope: jspb.Message.getFieldWithDefault(msg, 1, ""),
    username: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.v2.common.errors.AccessDeniedErrorDetails}
 */
proto.kurrentdb.protocol.v2.common.errors.AccessDeniedErrorDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.v2.common.errors.AccessDeniedErrorDetails;
  return proto.kurrentdb.protocol.v2.common.errors.AccessDeniedErrorDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.v2.common.errors.AccessDeniedErrorDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.v2.common.errors.AccessDeniedErrorDetails}
 */
proto.kurrentdb.protocol.v2.common.errors.AccessDeniedErrorDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setScope(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.v2.common.errors.AccessDeniedErrorDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.v2.common.errors.AccessDeniedErrorDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.v2.common.errors.AccessDeniedErrorDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.v2.common.errors.AccessDeniedErrorDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string scope = 1;
 * @return {string}
 */
proto.kurrentdb.protocol.v2.common.errors.AccessDeniedErrorDetails.prototype.getScope = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.v2.common.errors.AccessDeniedErrorDetails} returns this
 */
proto.kurrentdb.protocol.v2.common.errors.AccessDeniedErrorDetails.prototype.setScope = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.kurrentdb.protocol.v2.common.errors.AccessDeniedErrorDetails} returns this
 */
proto.kurrentdb.protocol.v2.common.errors.AccessDeniedErrorDetails.prototype.clearScope = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kurrentdb.protocol.v2.common.errors.AccessDeniedErrorDetails.prototype.hasScope = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string username = 2;
 * @return {string}
 */
proto.kurrentdb.protocol.v2.common.errors.AccessDeniedErrorDetails.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.v2.common.errors.AccessDeniedErrorDetails} returns this
 */
proto.kurrentdb.protocol.v2.common.errors.AccessDeniedErrorDetails.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.kurrentdb.protocol.v2.common.errors.AccessDeniedErrorDetails} returns this
 */
proto.kurrentdb.protocol.v2.common.errors.AccessDeniedErrorDetails.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kurrentdb.protocol.v2.common.errors.AccessDeniedErrorDetails.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    violationsList: jspb.Message.toObjectList(msg.getViolationsList(),
    proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.FieldViolation.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails}
 */
proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails;
  return proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails}
 */
proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.FieldViolation;
      reader.readMessage(value,proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.FieldViolation.deserializeBinaryFromReader);
      msg.addViolations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getViolationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.FieldViolation.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.FieldViolation.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.FieldViolation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.FieldViolation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.FieldViolation.toObject = function(includeInstance, msg) {
  var f, obj = {
    field: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.FieldViolation}
 */
proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.FieldViolation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.FieldViolation;
  return proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.FieldViolation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.FieldViolation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.FieldViolation}
 */
proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.FieldViolation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setField(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.FieldViolation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.FieldViolation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.FieldViolation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.FieldViolation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getField();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string field = 1;
 * @return {string}
 */
proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.FieldViolation.prototype.getField = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.FieldViolation} returns this
 */
proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.FieldViolation.prototype.setField = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.FieldViolation.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.FieldViolation} returns this
 */
proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.FieldViolation.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated FieldViolation violations = 1;
 * @return {!Array<!proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.FieldViolation>}
 */
proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.prototype.getViolationsList = function() {
  return /** @type{!Array<!proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.FieldViolation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.FieldViolation, 1));
};


/**
 * @param {!Array<!proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.FieldViolation>} value
 * @return {!proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails} returns this
*/
proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.prototype.setViolationsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.FieldViolation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.FieldViolation}
 */
proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.prototype.addViolations = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.FieldViolation, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails} returns this
 */
proto.kurrentdb.protocol.v2.common.errors.InvalidRequestErrorDetails.prototype.clearViolationsList = function() {
  return this.setViolationsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.v2.common.errors.NotLeaderNodeErrorDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.v2.common.errors.NotLeaderNodeErrorDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.v2.common.errors.NotLeaderNodeErrorDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.v2.common.errors.NotLeaderNodeErrorDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: jspb.Message.getFieldWithDefault(msg, 1, ""),
    port: jspb.Message.getFieldWithDefault(msg, 2, 0),
    nodeId: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.v2.common.errors.NotLeaderNodeErrorDetails}
 */
proto.kurrentdb.protocol.v2.common.errors.NotLeaderNodeErrorDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.v2.common.errors.NotLeaderNodeErrorDetails;
  return proto.kurrentdb.protocol.v2.common.errors.NotLeaderNodeErrorDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.v2.common.errors.NotLeaderNodeErrorDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.v2.common.errors.NotLeaderNodeErrorDetails}
 */
proto.kurrentdb.protocol.v2.common.errors.NotLeaderNodeErrorDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.v2.common.errors.NotLeaderNodeErrorDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.v2.common.errors.NotLeaderNodeErrorDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.v2.common.errors.NotLeaderNodeErrorDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.v2.common.errors.NotLeaderNodeErrorDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHost();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPort();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.kurrentdb.protocol.v2.common.errors.NotLeaderNodeErrorDetails.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.v2.common.errors.NotLeaderNodeErrorDetails} returns this
 */
proto.kurrentdb.protocol.v2.common.errors.NotLeaderNodeErrorDetails.prototype.setHost = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.kurrentdb.protocol.v2.common.errors.NotLeaderNodeErrorDetails.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.kurrentdb.protocol.v2.common.errors.NotLeaderNodeErrorDetails} returns this
 */
proto.kurrentdb.protocol.v2.common.errors.NotLeaderNodeErrorDetails.prototype.setPort = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string node_id = 3;
 * @return {string}
 */
proto.kurrentdb.protocol.v2.common.errors.NotLeaderNodeErrorDetails.prototype.getNodeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.v2.common.errors.NotLeaderNodeErrorDetails} returns this
 */
proto.kurrentdb.protocol.v2.common.errors.NotLeaderNodeErrorDetails.prototype.setNodeId = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.kurrentdb.protocol.v2.common.errors.NotLeaderNodeErrorDetails} returns this
 */
proto.kurrentdb.protocol.v2.common.errors.NotLeaderNodeErrorDetails.prototype.clearNodeId = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kurrentdb.protocol.v2.common.errors.NotLeaderNodeErrorDetails.prototype.hasNodeId = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.v2.common.errors.RetryInfoErrorDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.v2.common.errors.RetryInfoErrorDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.v2.common.errors.RetryInfoErrorDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.v2.common.errors.RetryInfoErrorDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    retryDelayMs: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.v2.common.errors.RetryInfoErrorDetails}
 */
proto.kurrentdb.protocol.v2.common.errors.RetryInfoErrorDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.v2.common.errors.RetryInfoErrorDetails;
  return proto.kurrentdb.protocol.v2.common.errors.RetryInfoErrorDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.v2.common.errors.RetryInfoErrorDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.v2.common.errors.RetryInfoErrorDetails}
 */
proto.kurrentdb.protocol.v2.common.errors.RetryInfoErrorDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRetryDelayMs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.v2.common.errors.RetryInfoErrorDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.v2.common.errors.RetryInfoErrorDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.v2.common.errors.RetryInfoErrorDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.v2.common.errors.RetryInfoErrorDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRetryDelayMs();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 retry_delay_ms = 1;
 * @return {number}
 */
proto.kurrentdb.protocol.v2.common.errors.RetryInfoErrorDetails.prototype.getRetryDelayMs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.kurrentdb.protocol.v2.common.errors.RetryInfoErrorDetails} returns this
 */
proto.kurrentdb.protocol.v2.common.errors.RetryInfoErrorDetails.prototype.setRetryDelayMs = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.v2.common.errors.NodeInfoErrorDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.v2.common.errors.NodeInfoErrorDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.v2.common.errors.NodeInfoErrorDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.v2.common.errors.NodeInfoErrorDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    host: jspb.Message.getFieldWithDefault(msg, 1, ""),
    port: jspb.Message.getFieldWithDefault(msg, 2, 0),
    nodeId: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.v2.common.errors.NodeInfoErrorDetails}
 */
proto.kurrentdb.protocol.v2.common.errors.NodeInfoErrorDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.v2.common.errors.NodeInfoErrorDetails;
  return proto.kurrentdb.protocol.v2.common.errors.NodeInfoErrorDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.v2.common.errors.NodeInfoErrorDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.v2.common.errors.NodeInfoErrorDetails}
 */
proto.kurrentdb.protocol.v2.common.errors.NodeInfoErrorDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.v2.common.errors.NodeInfoErrorDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.v2.common.errors.NodeInfoErrorDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.v2.common.errors.NodeInfoErrorDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.v2.common.errors.NodeInfoErrorDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHost();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPort();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string host = 1;
 * @return {string}
 */
proto.kurrentdb.protocol.v2.common.errors.NodeInfoErrorDetails.prototype.getHost = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.v2.common.errors.NodeInfoErrorDetails} returns this
 */
proto.kurrentdb.protocol.v2.common.errors.NodeInfoErrorDetails.prototype.setHost = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 port = 2;
 * @return {number}
 */
proto.kurrentdb.protocol.v2.common.errors.NodeInfoErrorDetails.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.kurrentdb.protocol.v2.common.errors.NodeInfoErrorDetails} returns this
 */
proto.kurrentdb.protocol.v2.common.errors.NodeInfoErrorDetails.prototype.setPort = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string node_id = 3;
 * @return {string}
 */
proto.kurrentdb.protocol.v2.common.errors.NodeInfoErrorDetails.prototype.getNodeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.v2.common.errors.NodeInfoErrorDetails} returns this
 */
proto.kurrentdb.protocol.v2.common.errors.NodeInfoErrorDetails.prototype.setNodeId = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.kurrentdb.protocol.v2.common.errors.NodeInfoErrorDetails} returns this
 */
proto.kurrentdb.protocol.v2.common.errors.NodeInfoErrorDetails.prototype.clearNodeId = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kurrentdb.protocol.v2.common.errors.NodeInfoErrorDetails.prototype.hasNodeId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * @enum {number}
 */
proto.kurrentdb.protocol.v2.common.errors.CommonError = {
  UNSPECIFIED: 0,
  COMMON_ERROR_ACCESS_DENIED: 1,
  COMMON_ERROR_INVALID_REQUEST: 2,
  COMMON_ERROR_NOT_LEADER_NODE: 5,
  COMMON_ERROR_OPERATION_TIMEOUT: 6,
  COMMON_ERROR_SERVER_NOT_READY: 7,
  COMMON_ERROR_SERVER_OVERLOADED: 8,
  COMMON_ERROR_SERVER_MALFUNCTION: 9
};

goog.object.extend(exports, proto.kurrentdb.protocol.v2.common.errors);
