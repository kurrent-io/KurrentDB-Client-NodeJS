// source: kurrentdb/protocols/v2/features/service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var kurrentdb_protocols_v2_core_pb = require('../../../../kurrentdb/protocols/v2/core_pb.js');
goog.object.extend(proto, kurrentdb_protocols_v2_core_pb);
goog.exportSymbol('proto.kurrentdb.protocol.v2.Feature', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.v2.FeatureRequirement', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.v2.FeaturesList', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.v2.PolicyStatus', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.v2.ServerInfo', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.v2.ServerInfoRequest', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.v2.ServerInfoResponse', null, global);
goog.exportSymbol('proto.kurrentdb.protocol.v2.ServerMetadata', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.v2.ServerMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.v2.ServerMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.v2.ServerMetadata.displayName = 'proto.kurrentdb.protocol.v2.ServerMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.v2.ServerInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.v2.ServerInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.v2.ServerInfoRequest.displayName = 'proto.kurrentdb.protocol.v2.ServerInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.v2.ServerInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.v2.ServerInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.v2.ServerInfoResponse.displayName = 'proto.kurrentdb.protocol.v2.ServerInfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.v2.ServerInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.v2.ServerInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.v2.ServerInfo.displayName = 'proto.kurrentdb.protocol.v2.ServerInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.v2.FeaturesList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.kurrentdb.protocol.v2.FeaturesList.repeatedFields_, null);
};
goog.inherits(proto.kurrentdb.protocol.v2.FeaturesList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.v2.FeaturesList.displayName = 'proto.kurrentdb.protocol.v2.FeaturesList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.v2.Feature = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.kurrentdb.protocol.v2.Feature.repeatedFields_, null);
};
goog.inherits(proto.kurrentdb.protocol.v2.Feature, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.v2.Feature.displayName = 'proto.kurrentdb.protocol.v2.Feature';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.kurrentdb.protocol.v2.FeatureRequirement = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.kurrentdb.protocol.v2.FeatureRequirement, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.kurrentdb.protocol.v2.FeatureRequirement.displayName = 'proto.kurrentdb.protocol.v2.FeatureRequirement';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.v2.ServerMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.v2.ServerMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.v2.ServerMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.v2.ServerMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    version: jspb.Message.getFieldWithDefault(msg, 1, ""),
    build: jspb.Message.getFieldWithDefault(msg, 2, ""),
    minCompatibleClientVersion: jspb.Message.getFieldWithDefault(msg, 3, ""),
    nodeId: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.v2.ServerMetadata}
 */
proto.kurrentdb.protocol.v2.ServerMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.v2.ServerMetadata;
  return proto.kurrentdb.protocol.v2.ServerMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.v2.ServerMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.v2.ServerMetadata}
 */
proto.kurrentdb.protocol.v2.ServerMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBuild(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMinCompatibleClientVersion(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.v2.ServerMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.v2.ServerMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.v2.ServerMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.v2.ServerMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBuild();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMinCompatibleClientVersion();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getNodeId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string version = 1;
 * @return {string}
 */
proto.kurrentdb.protocol.v2.ServerMetadata.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.v2.ServerMetadata} returns this
 */
proto.kurrentdb.protocol.v2.ServerMetadata.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string build = 2;
 * @return {string}
 */
proto.kurrentdb.protocol.v2.ServerMetadata.prototype.getBuild = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.v2.ServerMetadata} returns this
 */
proto.kurrentdb.protocol.v2.ServerMetadata.prototype.setBuild = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string min_compatible_client_version = 3;
 * @return {string}
 */
proto.kurrentdb.protocol.v2.ServerMetadata.prototype.getMinCompatibleClientVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.v2.ServerMetadata} returns this
 */
proto.kurrentdb.protocol.v2.ServerMetadata.prototype.setMinCompatibleClientVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string node_id = 4;
 * @return {string}
 */
proto.kurrentdb.protocol.v2.ServerMetadata.prototype.getNodeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.v2.ServerMetadata} returns this
 */
proto.kurrentdb.protocol.v2.ServerMetadata.prototype.setNodeId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.v2.ServerInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.v2.ServerInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.v2.ServerInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.v2.ServerInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientVersion: jspb.Message.getFieldWithDefault(msg, 1, ""),
    clientId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.v2.ServerInfoRequest}
 */
proto.kurrentdb.protocol.v2.ServerInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.v2.ServerInfoRequest;
  return proto.kurrentdb.protocol.v2.ServerInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.v2.ServerInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.v2.ServerInfoRequest}
 */
proto.kurrentdb.protocol.v2.ServerInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientVersion(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.v2.ServerInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.v2.ServerInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.v2.ServerInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.v2.ServerInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientVersion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string client_version = 1;
 * @return {string}
 */
proto.kurrentdb.protocol.v2.ServerInfoRequest.prototype.getClientVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.v2.ServerInfoRequest} returns this
 */
proto.kurrentdb.protocol.v2.ServerInfoRequest.prototype.setClientVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string client_id = 2;
 * @return {string}
 */
proto.kurrentdb.protocol.v2.ServerInfoRequest.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.v2.ServerInfoRequest} returns this
 */
proto.kurrentdb.protocol.v2.ServerInfoRequest.prototype.setClientId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.v2.ServerInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.v2.ServerInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.v2.ServerInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.v2.ServerInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    info: (f = msg.getInfo()) && proto.kurrentdb.protocol.v2.ServerInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.v2.ServerInfoResponse}
 */
proto.kurrentdb.protocol.v2.ServerInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.v2.ServerInfoResponse;
  return proto.kurrentdb.protocol.v2.ServerInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.v2.ServerInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.v2.ServerInfoResponse}
 */
proto.kurrentdb.protocol.v2.ServerInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.kurrentdb.protocol.v2.ServerInfo;
      reader.readMessage(value,proto.kurrentdb.protocol.v2.ServerInfo.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.v2.ServerInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.v2.ServerInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.v2.ServerInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.v2.ServerInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.kurrentdb.protocol.v2.ServerInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional ServerInfo info = 1;
 * @return {?proto.kurrentdb.protocol.v2.ServerInfo}
 */
proto.kurrentdb.protocol.v2.ServerInfoResponse.prototype.getInfo = function() {
  return /** @type{?proto.kurrentdb.protocol.v2.ServerInfo} */ (
    jspb.Message.getWrapperField(this, proto.kurrentdb.protocol.v2.ServerInfo, 1));
};


/**
 * @param {?proto.kurrentdb.protocol.v2.ServerInfo|undefined} value
 * @return {!proto.kurrentdb.protocol.v2.ServerInfoResponse} returns this
*/
proto.kurrentdb.protocol.v2.ServerInfoResponse.prototype.setInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kurrentdb.protocol.v2.ServerInfoResponse} returns this
 */
proto.kurrentdb.protocol.v2.ServerInfoResponse.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kurrentdb.protocol.v2.ServerInfoResponse.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.v2.ServerInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.v2.ServerInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.v2.ServerInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.v2.ServerInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && proto.kurrentdb.protocol.v2.ServerMetadata.toObject(includeInstance, f),
    featuresMap: (f = msg.getFeaturesMap()) ? f.toObject(includeInstance, proto.kurrentdb.protocol.v2.FeaturesList.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.v2.ServerInfo}
 */
proto.kurrentdb.protocol.v2.ServerInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.v2.ServerInfo;
  return proto.kurrentdb.protocol.v2.ServerInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.v2.ServerInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.v2.ServerInfo}
 */
proto.kurrentdb.protocol.v2.ServerInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.kurrentdb.protocol.v2.ServerMetadata;
      reader.readMessage(value,proto.kurrentdb.protocol.v2.ServerMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = msg.getFeaturesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.kurrentdb.protocol.v2.FeaturesList.deserializeBinaryFromReader, "", new proto.kurrentdb.protocol.v2.FeaturesList());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.v2.ServerInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.v2.ServerInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.v2.ServerInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.v2.ServerInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.kurrentdb.protocol.v2.ServerMetadata.serializeBinaryToWriter
    );
  }
  f = message.getFeaturesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.kurrentdb.protocol.v2.FeaturesList.serializeBinaryToWriter);
  }
};


/**
 * optional ServerMetadata metadata = 1;
 * @return {?proto.kurrentdb.protocol.v2.ServerMetadata}
 */
proto.kurrentdb.protocol.v2.ServerInfo.prototype.getMetadata = function() {
  return /** @type{?proto.kurrentdb.protocol.v2.ServerMetadata} */ (
    jspb.Message.getWrapperField(this, proto.kurrentdb.protocol.v2.ServerMetadata, 1));
};


/**
 * @param {?proto.kurrentdb.protocol.v2.ServerMetadata|undefined} value
 * @return {!proto.kurrentdb.protocol.v2.ServerInfo} returns this
*/
proto.kurrentdb.protocol.v2.ServerInfo.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kurrentdb.protocol.v2.ServerInfo} returns this
 */
proto.kurrentdb.protocol.v2.ServerInfo.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kurrentdb.protocol.v2.ServerInfo.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * map<string, FeaturesList> features = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.kurrentdb.protocol.v2.FeaturesList>}
 */
proto.kurrentdb.protocol.v2.ServerInfo.prototype.getFeaturesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.kurrentdb.protocol.v2.FeaturesList>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.kurrentdb.protocol.v2.FeaturesList));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.kurrentdb.protocol.v2.ServerInfo} returns this
 */
proto.kurrentdb.protocol.v2.ServerInfo.prototype.clearFeaturesMap = function() {
  this.getFeaturesMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.kurrentdb.protocol.v2.FeaturesList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.v2.FeaturesList.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.v2.FeaturesList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.v2.FeaturesList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.v2.FeaturesList.toObject = function(includeInstance, msg) {
  var f, obj = {
    featuresList: jspb.Message.toObjectList(msg.getFeaturesList(),
    proto.kurrentdb.protocol.v2.Feature.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.v2.FeaturesList}
 */
proto.kurrentdb.protocol.v2.FeaturesList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.v2.FeaturesList;
  return proto.kurrentdb.protocol.v2.FeaturesList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.v2.FeaturesList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.v2.FeaturesList}
 */
proto.kurrentdb.protocol.v2.FeaturesList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.kurrentdb.protocol.v2.Feature;
      reader.readMessage(value,proto.kurrentdb.protocol.v2.Feature.deserializeBinaryFromReader);
      msg.addFeatures(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.v2.FeaturesList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.v2.FeaturesList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.v2.FeaturesList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.v2.FeaturesList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFeaturesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.kurrentdb.protocol.v2.Feature.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Feature features = 1;
 * @return {!Array<!proto.kurrentdb.protocol.v2.Feature>}
 */
proto.kurrentdb.protocol.v2.FeaturesList.prototype.getFeaturesList = function() {
  return /** @type{!Array<!proto.kurrentdb.protocol.v2.Feature>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.kurrentdb.protocol.v2.Feature, 1));
};


/**
 * @param {!Array<!proto.kurrentdb.protocol.v2.Feature>} value
 * @return {!proto.kurrentdb.protocol.v2.FeaturesList} returns this
*/
proto.kurrentdb.protocol.v2.FeaturesList.prototype.setFeaturesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.kurrentdb.protocol.v2.Feature=} opt_value
 * @param {number=} opt_index
 * @return {!proto.kurrentdb.protocol.v2.Feature}
 */
proto.kurrentdb.protocol.v2.FeaturesList.prototype.addFeatures = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.kurrentdb.protocol.v2.Feature, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.kurrentdb.protocol.v2.FeaturesList} returns this
 */
proto.kurrentdb.protocol.v2.FeaturesList.prototype.clearFeaturesList = function() {
  return this.setFeaturesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.kurrentdb.protocol.v2.Feature.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.v2.Feature.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.v2.Feature.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.v2.Feature} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.v2.Feature.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    enabled: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    deprecated: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    requirementsList: jspb.Message.toObjectList(msg.getRequirementsList(),
    proto.kurrentdb.protocol.v2.FeatureRequirement.toObject, includeInstance),
    clientConfigurable: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    availableUntil: (f = msg.getAvailableUntil()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.v2.Feature}
 */
proto.kurrentdb.protocol.v2.Feature.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.v2.Feature;
  return proto.kurrentdb.protocol.v2.Feature.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.v2.Feature} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.v2.Feature}
 */
proto.kurrentdb.protocol.v2.Feature.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnabled(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDeprecated(value);
      break;
    case 5:
      var value = new proto.kurrentdb.protocol.v2.FeatureRequirement;
      reader.readMessage(value,proto.kurrentdb.protocol.v2.FeatureRequirement.deserializeBinaryFromReader);
      msg.addRequirements(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setClientConfigurable(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setAvailableUntil(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.v2.Feature.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.v2.Feature.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.v2.Feature} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.v2.Feature.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEnabled();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getDeprecated();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getRequirementsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.kurrentdb.protocol.v2.FeatureRequirement.serializeBinaryToWriter
    );
  }
  f = message.getClientConfigurable();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getAvailableUntil();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.kurrentdb.protocol.v2.Feature.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.v2.Feature} returns this
 */
proto.kurrentdb.protocol.v2.Feature.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.kurrentdb.protocol.v2.Feature.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.v2.Feature} returns this
 */
proto.kurrentdb.protocol.v2.Feature.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.kurrentdb.protocol.v2.Feature} returns this
 */
proto.kurrentdb.protocol.v2.Feature.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kurrentdb.protocol.v2.Feature.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool enabled = 3;
 * @return {boolean}
 */
proto.kurrentdb.protocol.v2.Feature.prototype.getEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.kurrentdb.protocol.v2.Feature} returns this
 */
proto.kurrentdb.protocol.v2.Feature.prototype.setEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool deprecated = 4;
 * @return {boolean}
 */
proto.kurrentdb.protocol.v2.Feature.prototype.getDeprecated = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.kurrentdb.protocol.v2.Feature} returns this
 */
proto.kurrentdb.protocol.v2.Feature.prototype.setDeprecated = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * repeated FeatureRequirement requirements = 5;
 * @return {!Array<!proto.kurrentdb.protocol.v2.FeatureRequirement>}
 */
proto.kurrentdb.protocol.v2.Feature.prototype.getRequirementsList = function() {
  return /** @type{!Array<!proto.kurrentdb.protocol.v2.FeatureRequirement>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.kurrentdb.protocol.v2.FeatureRequirement, 5));
};


/**
 * @param {!Array<!proto.kurrentdb.protocol.v2.FeatureRequirement>} value
 * @return {!proto.kurrentdb.protocol.v2.Feature} returns this
*/
proto.kurrentdb.protocol.v2.Feature.prototype.setRequirementsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.kurrentdb.protocol.v2.FeatureRequirement=} opt_value
 * @param {number=} opt_index
 * @return {!proto.kurrentdb.protocol.v2.FeatureRequirement}
 */
proto.kurrentdb.protocol.v2.Feature.prototype.addRequirements = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.kurrentdb.protocol.v2.FeatureRequirement, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.kurrentdb.protocol.v2.Feature} returns this
 */
proto.kurrentdb.protocol.v2.Feature.prototype.clearRequirementsList = function() {
  return this.setRequirementsList([]);
};


/**
 * optional bool client_configurable = 6;
 * @return {boolean}
 */
proto.kurrentdb.protocol.v2.Feature.prototype.getClientConfigurable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.kurrentdb.protocol.v2.Feature} returns this
 */
proto.kurrentdb.protocol.v2.Feature.prototype.setClientConfigurable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional google.protobuf.Timestamp available_until = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.kurrentdb.protocol.v2.Feature.prototype.getAvailableUntil = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.kurrentdb.protocol.v2.Feature} returns this
*/
proto.kurrentdb.protocol.v2.Feature.prototype.setAvailableUntil = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kurrentdb.protocol.v2.Feature} returns this
 */
proto.kurrentdb.protocol.v2.Feature.prototype.clearAvailableUntil = function() {
  return this.setAvailableUntil(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kurrentdb.protocol.v2.Feature.prototype.hasAvailableUntil = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.kurrentdb.protocol.v2.FeatureRequirement.prototype.toObject = function(opt_includeInstance) {
  return proto.kurrentdb.protocol.v2.FeatureRequirement.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.kurrentdb.protocol.v2.FeatureRequirement} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.v2.FeatureRequirement.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: (f = msg.getValue()) && kurrentdb_protocols_v2_core_pb.DynamicValue.toObject(includeInstance, f),
    policyStatus: jspb.Message.getFieldWithDefault(msg, 3, 0),
    description: jspb.Message.getFieldWithDefault(msg, 4, ""),
    violationMessage: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.kurrentdb.protocol.v2.FeatureRequirement}
 */
proto.kurrentdb.protocol.v2.FeatureRequirement.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.kurrentdb.protocol.v2.FeatureRequirement;
  return proto.kurrentdb.protocol.v2.FeatureRequirement.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.kurrentdb.protocol.v2.FeatureRequirement} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.kurrentdb.protocol.v2.FeatureRequirement}
 */
proto.kurrentdb.protocol.v2.FeatureRequirement.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new kurrentdb_protocols_v2_core_pb.DynamicValue;
      reader.readMessage(value,kurrentdb_protocols_v2_core_pb.DynamicValue.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    case 3:
      var value = /** @type {!proto.kurrentdb.protocol.v2.PolicyStatus} */ (reader.readEnum());
      msg.setPolicyStatus(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setViolationMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.kurrentdb.protocol.v2.FeatureRequirement.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.kurrentdb.protocol.v2.FeatureRequirement.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.kurrentdb.protocol.v2.FeatureRequirement} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.kurrentdb.protocol.v2.FeatureRequirement.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      kurrentdb_protocols_v2_core_pb.DynamicValue.serializeBinaryToWriter
    );
  }
  f = message.getPolicyStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.kurrentdb.protocol.v2.FeatureRequirement.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.v2.FeatureRequirement} returns this
 */
proto.kurrentdb.protocol.v2.FeatureRequirement.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional kurrentdb.protocol.DynamicValue value = 2;
 * @return {?proto.kurrentdb.protocol.DynamicValue}
 */
proto.kurrentdb.protocol.v2.FeatureRequirement.prototype.getValue = function() {
  return /** @type{?proto.kurrentdb.protocol.DynamicValue} */ (
    jspb.Message.getWrapperField(this, kurrentdb_protocols_v2_core_pb.DynamicValue, 2));
};


/**
 * @param {?proto.kurrentdb.protocol.DynamicValue|undefined} value
 * @return {!proto.kurrentdb.protocol.v2.FeatureRequirement} returns this
*/
proto.kurrentdb.protocol.v2.FeatureRequirement.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.kurrentdb.protocol.v2.FeatureRequirement} returns this
 */
proto.kurrentdb.protocol.v2.FeatureRequirement.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kurrentdb.protocol.v2.FeatureRequirement.prototype.hasValue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional PolicyStatus policy_status = 3;
 * @return {!proto.kurrentdb.protocol.v2.PolicyStatus}
 */
proto.kurrentdb.protocol.v2.FeatureRequirement.prototype.getPolicyStatus = function() {
  return /** @type {!proto.kurrentdb.protocol.v2.PolicyStatus} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.kurrentdb.protocol.v2.PolicyStatus} value
 * @return {!proto.kurrentdb.protocol.v2.FeatureRequirement} returns this
 */
proto.kurrentdb.protocol.v2.FeatureRequirement.prototype.setPolicyStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string description = 4;
 * @return {string}
 */
proto.kurrentdb.protocol.v2.FeatureRequirement.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.v2.FeatureRequirement} returns this
 */
proto.kurrentdb.protocol.v2.FeatureRequirement.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.kurrentdb.protocol.v2.FeatureRequirement} returns this
 */
proto.kurrentdb.protocol.v2.FeatureRequirement.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kurrentdb.protocol.v2.FeatureRequirement.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string violation_message = 5;
 * @return {string}
 */
proto.kurrentdb.protocol.v2.FeatureRequirement.prototype.getViolationMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.kurrentdb.protocol.v2.FeatureRequirement} returns this
 */
proto.kurrentdb.protocol.v2.FeatureRequirement.prototype.setViolationMessage = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.kurrentdb.protocol.v2.FeatureRequirement} returns this
 */
proto.kurrentdb.protocol.v2.FeatureRequirement.prototype.clearViolationMessage = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.kurrentdb.protocol.v2.FeatureRequirement.prototype.hasViolationMessage = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * @enum {number}
 */
proto.kurrentdb.protocol.v2.PolicyStatus = {
  OPTIONAL: 0,
  REQUIRED: 3,
  PROHIBITED: 4
};

goog.object.extend(exports, proto.kurrentdb.protocol.v2);
