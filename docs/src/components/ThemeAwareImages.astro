---
// src/components/ThemeAwareImages.astro

export interface Props {
  light: string;
  dark: string;
  alt?: string;
  width?: string | number;
  height?: string | number;
  class?: string;
}

const { light, dark, alt = "", width = "800", height = "600", class: className } = Astro.props;

// Build style object for dimensions
const imageStyle = {
  ...(width && { width: typeof width === 'number' ? `${width}px` : width }),
  ...(height && { height: typeof height === 'number' ? `${height}px` : height }),
};

const styleString = Object.entries(imageStyle)
  .map(([key, value]) => `${key}: ${value}`)
  .join('; ');

// Check if images are SVGs to handle them differently
const isSvg = light.toLowerCase().endsWith('.svg') || dark.toLowerCase().endsWith('.svg');
---

<div class={`theme-aware-image ${className || ''}`}>
  {isSvg ? (
    <>
      <img
        src={light}
        alt={alt}
        class="light-image"
        style={styleString}
        width={width}
        height={height}
        loading="lazy"
      />
      <img
        src={dark}
        alt={alt}
        class="dark-image"
        style={styleString}
        width={width}
        height={height}
        loading="lazy"
      />
    </>
  ) : (
    <>
      <img
        src={light}
        alt={alt}
        class="light-image"
        style={styleString}
        loading="lazy"
      />
      <img
        src={dark}
        alt={alt}
        class="dark-image"
        style={styleString}
        loading="lazy"
      />
    </>
  )}
</div>

<style>
  .theme-aware-image {
    display: inline-block;
    position: relative;
    max-width: 100%;
  }
  
  .light-image,
  .dark-image {
    max-width: 100%;
    height: auto;
    display: block;
  }
  
  /* Show light image by default and in light theme */
  .dark-image {
    display: none;
  }
  
  /* Switch to dark image in dark theme */
  :root[data-theme="dark"] .light-image {
    display: none;
  }
  
  :root[data-theme="dark"] .dark-image {
    display: block;
  }
  
  /* Smooth transitions when theme changes */
  .light-image,
  .dark-image {
    transition: opacity 0.2s ease-in-out;
  }
  
  /* Ensure images maintain aspect ratio */
  .theme-aware-image img {
    width: 100%;
    height: auto;
    max-width: 100%;
  }
  
  /* SVG specific styles */
  .theme-aware-image img[src$=".svg"] {
    width: auto;
    height: auto;
    max-width: 100%;
  }
</style>